high_text,low_text,label
Create a new task which typically has a  start date and an end date. Tasks are activities that one or more persons resources are expected to complete in the specified time frame.,To create a new task an object of TaskManager class is passed to the class constructor. The TaskManager in its turn takes care of a resource allocation using ResourceAssignmentCollection class. ,1
Create a new task which typically has a  start date and an end date. Tasks are activities that one or more persons resources are expected to complete in the specified time frame.,The Task class provides a public method SetStart() which allows to specify starting date for the task. As input argument the method takes an object of GanttCalendar class. ,1
Create a new task which typically has a  start date and an end date. Tasks are activities that one or more persons resources are expected to complete in the specified time frame.,The Task class provides a public method SetEnd() which allows to specify starting date for the task. As input argument the method takes an object of GanttCalendar class.,1
Create a new task which typically has a  start date and an end date. Tasks are activities that one or more persons resources are expected to complete in the specified time frame.,The Task class provides a public method SetDuration() which allows to specify the duration of the task. As input argument the method takes an object of TaskLength class,1
Delete Tasks; Delete an existing task and all its associated information such as links to other tasks or knowledge on what resources are supposed to work on them.,"To delete a task from the Calendar the GanttProject class call delete method and supplied TaskId paramenter. The adjustment of allocated resources and links to other tasks takes place through interfacing with the following classes DefaultMutableTreeNode, GanttTreeTableNode, TaskNode, and AdjustTaskBoundsAlgorithm.",1
Delete Tasks; Delete an existing task and all its associated information such as links to other tasks or knowledge on what resources are supposed to work on them.,When deleting a task the GanttProject class calls GanttTreeTableNode and DefaultMutableTreeNode classes to identify the parent of the task being deleted.,1
Delete Tasks; Delete an existing task and all its associated information such as links to other tasks or knowledge on what resources are supposed to work on them.,When deleting a task the GanttProject class calls AdjustTaskBoundsAlgorithm and passes the parent of the deleted task as a parameter. The AdjustTaskBoundsAlgorithm takes care of handling and releasing resources associated with the deleted task. ,1
"Maintain task properties;  Edit and update task properties including start and end date, name, or progress(% complete).",GUI should able to provide ability to change task name. ,1
"Maintain task properties;  Edit and update task properties including start and end date, name, or progress(% complete).",GUI should able to provide ability to change start/end date of a task.,1
"Maintain task properties;  Edit and update task properties including start and end date, name, or progress(% complete).",GUI should able to provide ability to set progress on a task.,1
"Add/Remove Tasks as Subtasks;A task can be made a subtask of another. For example, task 1.1 is a subtask of task 1.",To add tasks as subtasks a method which indent the selected task nodes in GUI and change them to be subtasks is used. A manager of task hierarchy provides functions to update the relationship between tasks.,1
"Add/Remove Tasks as Subtasks;A task can be made a subtask of another. For example, task 1.1 is a subtask of task 1.",The manager of task hierarchy provides a method to move a task node to a specific position.,1
"Add/Remove Tasks as Subtasks;A task can be made a subtask of another. For example, task 1.1 is a subtask of task 1.",To remove tasks as subtasks GanttTree2 class calls a method which dedent selected task nodes in GUI so that they will not be subtasks of their original parents tasks. An object of a class is used to remove relationship between selected tasks and their original parents and add relationship between selected tasks and their new parents.,1
"Add/Remove Tasks as Subtasks;A task can be made a subtask of another. For example, task 1.1 is a subtask of task 1.",To remove tasks as subtasks a method which dedent selected task nodes in GUI so that they will not be subtasks of their original parents tasks is used. The task tree model provides methods to remove relationship between selected tasks and their original parents and add relationship between selected tasks and their new parents.,1
"Handle Milestones; A milestone is a special task. Whereas a task typically has a timeframe specified (the time needed to complete the task), a milestone is typically an event. For example, the release date of a software is an event rather than a timeframe.",Milestone is a task with no duration. It has only time point of occurrence.,1
"Handle Milestones; A milestone is a special task. Whereas a task typically has a timeframe specified (the time needed to complete the task), a milestone is typically an event. For example, the release date of a software is an event rather than a timeframe.",User should be able to create milestones.,1
"Handle Milestones; A milestone is a special task. Whereas a task typically has a timeframe specified (the time needed to complete the task), a milestone is typically an event. For example, the release date of a software is an event rather than a timeframe.",User interface should be able to provide an ability to specify whether a specific task in a milestone.,1
"Handle Milestones; A milestone is a special task. Whereas a task typically has a timeframe specified (the time needed to complete the task), a milestone is typically an event. For example, the release date of a software is an event rather than a timeframe.",Milestone should be displayed visually differently from regular tasks.,1
Create Resources (person);GanttProject supports Persons as resources. Persons have names and holidays or vacation days. Persons can be assigned to work on tasks.,A GUI of task property provides interface and functions to add and remove human resource assignments by using an object of the resource assignments collection class.,1
Create Resources (person);GanttProject supports Persons as resources. Persons have names and holidays or vacation days. Persons can be assigned to work on tasks.,"The human resource class contains name, phone, email, and holidays. The class provides functions to set and get these properties. A class is used to represent the holidays. There can be multiple holidays. ",1
Create Resources (person);GanttProject supports Persons as resources. Persons have names and holidays or vacation days. Persons can be assigned to work on tasks.,The class for holidays provides functions to get the start date and the finish date. The class also provides a function to check if a special date is in holiday.,1
Create Resources (person);GanttProject supports Persons as resources. Persons have names and holidays or vacation days. Persons can be assigned to work on tasks.,A human resource assignment class is used to represent the relationship between one task and one human resource. The class provides functions to get the task and the human resource. ,1
Create Resources (person);GanttProject supports Persons as resources. Persons have names and holidays or vacation days. Persons can be assigned to work on tasks.,A collection of resource assignments is used to manage the relationships between multiple human resources and a single task. It contains multiple objects of the human resource assignment class. The collection provides functions to add and remove human resource assignments.,1
Create Resources (person);GanttProject supports Persons as resources. Persons have names and holidays or vacation days. Persons can be assigned to work on tasks.,The class of task uses an object of the assignments collection class to manage its assignments.,1
Delete Resources (person); Delete a person and all its associated information such as dependencies to all tasks the person is supposed to work on.,GUI needs to provide ability to delete resources from a project.,1
Delete Resources (person); Delete a person and all its associated information such as dependencies to all tasks the person is supposed to work on.,An assignment of a resource to a task is captured as a relationship.,1
Delete Resources (person); Delete a person and all its associated information such as dependencies to all tasks the person is supposed to work on.,"When a resource is removed, all the tasks where the resource is assigned need to be updated. ",1
"Maintain Resource Properties;A resource has a range of properties, including name and holidays","The human resource class contains name, phone, email, and holidays. The class provides functions to set and get these properties. A class is used to represent the holidays. There can be multiple holidays. ",1
"Maintain Resource Properties;A resource has a range of properties, including name and holidays",A GUI provides interface and functions to edit the properties of objects of the human resource class.,1
"Maintain Resource Properties;A resource has a range of properties, including name and holidays",The class for holidays provides functions to get the start date and the finish date. The class also provides function to check if a special date is in holiday.,1
"Add/Remove Task links; Tasks can be linked with one another to indicate the sequence in which they have to be performed. For example, if there is a link from task 1 to task 2 then task 2 can only be started after task 1 is completed. The start date of task 2 must thus be after the end date of task 1.",GUI needs to provide ability to link tasks in a project.,1
"Add/Remove Task links; Tasks can be linked with one another to indicate the sequence in which they have to be performed. For example, if there is a link from task 1 to task 2 then task 2 can only be started after task 1 is completed. The start date of task 2 must thus be after the end date of task 1.",The fact of linking of one task to another should be captured as dependency between two tasks.,1
"Add/Remove Task links; Tasks can be linked with one another to indicate the sequence in which they have to be performed. For example, if there is a link from task 1 to task 2 then task 2 can only be started after task 1 is completed. The start date of task 2 must thus be after the end date of task 1.","When a two or more tasks are link, there should be check conducted for potential collisions on the chart.",1
"Add/Remove Task links; Tasks can be linked with one another to indicate the sequence in which they have to be performed. For example, if there is a link from task 1 to task 2 then task 2 can only be started after task 1 is completed. The start date of task 2 must thus be after the end date of task 1.",The start and end dates for the graph can be either flexible or rigid for the purpose of adjusting and fixing potential collisions. ,1
Add/Remove Resources to Tasks Dependencies;Dependencies between tasks and resources indicate the resources who are supposed to complete a task. Each task could be worked on by multiple persons and each person could work on multiple tasks. Dependencies may also be annotated to capture how many hours each person is supposed to work on a task on a daily basis.,A class is used to represent the dependency between one task and one human resource. The dependency class provides functions to get the task and the human resource. ,1
Add/Remove Resources to Tasks Dependencies;Dependencies between tasks and resources indicate the resources who are supposed to complete a task. Each task could be worked on by multiple persons and each person could work on multiple tasks. Dependencies may also be annotated to capture how many hours each person is supposed to work on a task on a daily basis.,A collection of resource assignments is used to manage the relationships between multiple human resources and a task. It contains multiple objects of the human resource assignment class. The collection provides functions to add and remove human resource assignments.,1
Add/Remove Resources to Tasks Dependencies;Dependencies between tasks and resources indicate the resources who are supposed to complete a task. Each task could be worked on by multiple persons and each person could work on multiple tasks. Dependencies may also be annotated to capture how many hours each person is supposed to work on a task on a daily basis.,The class of task uses an object of the assignments collection class to manage its assignments.,1
Add/Remove Resources to Tasks Dependencies;Dependencies between tasks and resources indicate the resources who are supposed to complete a task. Each task could be worked on by multiple persons and each person could work on multiple tasks. Dependencies may also be annotated to capture how many hours each person is supposed to work on a task on a daily basis.,The human resource class can have multiple objects of resource assignments which assigns this resource to tasks. The class provides function to get the list of these objects.,1
Add/Remove Resources to Tasks Dependencies;Dependencies between tasks and resources indicate the resources who are supposed to complete a task. Each task could be worked on by multiple persons and each person could work on multiple tasks. Dependencies may also be annotated to capture how many hours each person is supposed to work on a task on a daily basis.,A GUI class of task property provides interface and functions to add and remove human resource assignments.,1
Add/Remove Resources to Tasks Dependencies;Dependencies between tasks and resources indicate the resources who are supposed to complete a task. Each task could be worked on by multiple persons and each person could work on multiple tasks. Dependencies may also be annotated to capture how many hours each person is supposed to work on a task on a daily basis.,A GUI class uses an object of resource tree table model class to display the resource tree. The resource tree table model provides functions build subtrees based on dependencies.,1
Add/Remove Resources to Tasks Dependencies;Dependencies between tasks and resources indicate the resources who are supposed to complete a task. Each task could be worked on by multiple persons and each person could work on multiple tasks. Dependencies may also be annotated to capture how many hours each person is supposed to work on a task on a daily basis.,A GUI class of human resource load distribution uses objects of a load distribution class to capture the hours each person is supposed to work.,1
Add/Remove Resources to Tasks Dependencies;Dependencies between tasks and resources indicate the resources who are supposed to complete a task. Each task could be worked on by multiple persons and each person could work on multiple tasks. Dependencies may also be annotated to capture how many hours each person is supposed to work on a task on a daily basis.,The load distribution class provides functions to calculate the distribution based on tasks and human resources. The functions uses the task manager.,1
Change Task Begin/End Times manually with user changes; Change the start or end date either by editing its properties or by dragging-and-dropping the bar in the GUI.,GUI needs to provide ability to change length of a task.,1
Change Task Begin/End Times manually with user changes; Change the start or end date either by editing its properties or by dragging-and-dropping the bar in the GUI.,Using GUI user should be able to change the length of a task by dragging-and-dropping the bar on the GUI.,1
Change Task Begin/End Times manually with user changes; Change the start or end date either by editing its properties or by dragging-and-dropping the bar in the GUI.,Using GUI user should be able to change the length of a task via date picker control.,1
Change Task Begin/End Times automatically with dependency changes;The start or end date should be changed automatically if links among tasks are changed,A dependency class contains a dependant task and a dependee task. It provides functions to get the dependant task and the dependee task. The dependency class also contains constraint to show the constraint of the dependency. ,1
Change Task Begin/End Times automatically with dependency changes;The start or end date should be changed automatically if links among tasks are changed,A class is used to represent the constraint that the start date of the dependee task should not be earlier than the end date of the dependent task.,1
Change Task Begin/End Times automatically with dependency changes;The start or end date should be changed automatically if links among tasks are changed,"A collection of dependency class is used to manage dependencies. It contains objects of dependency classes and provides functions to create, delete, and get dependencies. ",1
Change Task Begin/End Times automatically with dependency changes;The start or end date should be changed automatically if links among tasks are changed,A GUI class of task property provides interface and functions to add and remove dependencies by using an object of the dependency collection.,1
Change Task Begin/End Times automatically with dependency changes;The start or end date should be changed automatically if links among tasks are changed,A GUI class of graphic area provides function to draw dependency. The function uses an object of task manager to add dependencies.,1
Change Task Begin/End Times automatically with dependency changes;The start or end date should be changed automatically if links among tasks are changed,The task manager class uses an object of dependency collection class to manage dependencies.,1
Change Task Begin/End Times automatically with dependency changes;The start or end date should be changed automatically if links among tasks are changed,An object of the recalculating task schedule algorithm class is used to change the start or end date based on dependency changes. The algorithm class provides functions to fulfill the constraints and to modify the start or end date of the tasks.,1
Change Task Begin/End Times automatically with dependency changes; The start or end date should be changed automatically if one of its subtasks changes.,Application needs to keep track of task's begin and end times.,1
Change Task Begin/End Times automatically with dependency changes; The start or end date should be changed automatically if one of its subtasks changes.,Application needs to keep track of subtasks in a task.,1
Change Task Begin/End Times automatically with dependency changes; The start or end date should be changed automatically if one of its subtasks changes.,"Every time Start/End time for a subtask changes, the start/end time for the parent task need to change accordingly.",1
Change Task Begin/End Times automatically with dependency changes; The start or end date should be changed automatically if one of its subtasks changes.,"Every time Start/End time for a task changes, the start/end time of one or more its subtasks need to change as well.",1
Prevent Circular Dependencies;Links among tasks may not be circular in that task 1 cannot depend on task 2 if task 2 already depends on task 1.,A GUI class of graphic area provides a function to draw dependency. The function uses an object of the task manager to add dependencies.1,1
Prevent Circular Dependencies;Links among tasks may not be circular in that task 1 cannot depend on task 2 if task 2 already depends on task 1.,The task manager class uses an object of dependency collection class to manage dependencies.,1
Prevent Circular Dependencies;Links among tasks may not be circular in that task 1 cannot depend on task 2 if task 2 already depends on task 1.,The class of dependency collection provides a function to check if the new dependency will cause a loop each time a object of dependency class is created. The function returns an exception if there is a loop. ,1
Show Critical Path; The critical path indicates which tasks will cause project delays if they are delayed.,GUI needs to provide ability to display critical path and make the changes affecting critical path updated.,1
Show Critical Path; The critical path indicates which tasks will cause project delays if they are delayed.,The system should be able to evaluate critical path in a project.,1
Add/Remove Holidays and Vacation Days;Holidays and vacation days are properties of persons (resources). changing this information also changes the availability of a person on certain days.,The human resource class contains the variable holidays. The class provides functions to change and to get holidays. There can be multiple holidays. ,1
Add/Remove Holidays and Vacation Days;Holidays and vacation days are properties of persons (resources). changing this information also changes the availability of a person on certain days.,"There is a class to represent holiday. The holiday class provides functions to set the begin date and the end date of the holiday, to check if a date is in the holiday, and to get the duration of the holiday.",1
Add/Remove Holidays and Vacation Days;Holidays and vacation days are properties of persons (resources). changing this information also changes the availability of a person on certain days.,The human resource class provides a function to change the availability of the person based on holidays. ,1
"Show Resource Utilization (underused or overused person);Tasks may be assigned to persons and it should be indicated if a person receives more tasks than he/she is able to handle (e.g., the person hours per  task for all tasks exceeds the allowed 8 hours a day) or if the person is not available due to holidays or vacation days. it should also be indicated if the person is under-utilized in that he/she is working less than the 8 hours a day.",GUI needs to provide ability to assign task to persons.,1
"Show Resource Utilization (underused or overused person);Tasks may be assigned to persons and it should be indicated if a person receives more tasks than he/she is able to handle (e.g., the person hours per  task for all tasks exceeds the allowed 8 hours a day) or if the person is not available due to holidays or vacation days. it should also be indicated if the person is under-utilized in that he/she is working less than the 8 hours a day.",GUI needs to provide ability to assign persons to tasks.,1
"Show Resource Utilization (underused or overused person);Tasks may be assigned to persons and it should be indicated if a person receives more tasks than he/she is able to handle (e.g., the person hours per  task for all tasks exceeds the allowed 8 hours a day) or if the person is not available due to holidays or vacation days. it should also be indicated if the person is under-utilized in that he/she is working less than the 8 hours a day.",GUI needs to provide ability to show utilization of a person.,1
"Show Resource Utilization (underused or overused person);Tasks may be assigned to persons and it should be indicated if a person receives more tasks than he/she is able to handle (e.g., the person hours per  task for all tasks exceeds the allowed 8 hours a day) or if the person is not available due to holidays or vacation days. it should also be indicated if the person is under-utilized in that he/she is working less than the 8 hours a day.",GUI needs to provide ability to show is a person is  underutilized and overbooked.,1
"The core functionality of WARC Tools, specifically the WARC writer/reader, shall be implemented as a comprehensive, standalone, general purpose software library - libwarc.","A set of command line tools and an API incorporating libwarc shall enable the collection of online documents, such as html and embedded files, etc., and write them to valid WARC- records.",1
WARC v0.17 shall be the baseline version of the WARC standard used in this project.,Libwarc shall be implemented to WARC v0.17.,1
"WARC Tools shall be highly portable, running on a range of Linux/Unix platforms and XP as a minimum, together with man pages, build and installation guides, developer guides, etc.","Libwarc shall be developed on GNU/Linux, Fedora 7",1
"WARC Tools shall be highly portable, running on a range of Linux/Unix platforms and XP as a minimum, together with man pages, build and installation guides, developer guides, etc.",Libwarc shall be shipped with a manual and build scripts,1
"WARC Tools shall be highly portable, running on a range of Linux/Unix platforms and XP as a minimum, together with man pages, build and installation guides, developer guides, etc.","Libwarc shall be shipped with installation guides for Fedora, Debian, FreeBSD, Mac OS X 10.5 and Windows XP.",1
"WARC Tools shall be highly portable, running on a range of Linux/Unix platforms and XP as a minimum, together with man pages, build and installation guides, developer guides, etc.",Libwarc shall be shipped with a developer guide and useful examples.,1
"WARC Tools shall be highly portable, running on a range of Linux/Unix platforms and XP as a minimum, together with man pages, build and installation guides, developer guides, etc.","To ensure code portability on older computer architectures, Libwarc shall be compatible with any compiler conforming to the ANSI-C standard C89 revision.",1
"WARC Tools shall be highly portable, running on a range of Linux/Unix platforms and XP as a minimum, together with man pages, build and installation guides, developer guides, etc.","Libwarc shall be made available as a binary for at least GNU/Linux, FreeBSD, Mac OS X and Windows XP.",1
"WARC Tools shall be highly portable, running on a range of Linux/Unix platforms and XP as a minimum, together with man pages, build and installation guides, developer guides, etc.","Libwarc shall compile and run under Solaris, AIX, MingW or other Unix compliant system and may compile and run under Windows XP.",1
"WARC Tools shall be highly portable, running on a range of Linux/Unix platforms and XP as a minimum, together with man pages, build and installation guides, developer guides, etc.",Assembly code and specific system features shall not be used in libwarc to ensure resulting code is widely portable across multiple target architectures,1
"Utility and application level functionality of WARC Tools shall be made available to end users as command line tools, extensions to existing tools, and simple web applications for accessing WARC content.",A command line tool shall be implemented utilising libwarc to check the consistency of WARC-records and their conformance to the WARC ISO standard.,1
"Utility and application level functionality of WARC Tools shall be made available to end users as command line tools, extensions to existing tools, and simple web applications for accessing WARC content.","A command line tool ""arc2warc"" incorporating libwarc shall be able to migrate data in ARC-records to WARC-record format.",1
"Utility and application level functionality of WARC Tools shall be made available to end users as command line tools, extensions to existing tools, and simple web applications for accessing WARC content.","A set of command line tools incorporating libwarc shall perform migration of ""HTTrack"" archives to WARC-records.",1
"Utility and application level functionality of WARC Tools shall be made available to end users as command line tools, extensions to existing tools, and simple web applications for accessing WARC content.","A set of command line tools incorporating libwarc shall perform migration of ""wget"" archives to WARC-records.",1
"Utility and application level functionality of WARC Tools shall be made available to end users as command line tools, extensions to existing tools, and simple web applications for accessing WARC content.","A set of command line tools incorporating libwarc shall perform migration of ""curl"" archives to WARC-records.",1
"Utility and application level functionality of WARC Tools shall be made available to end users as command line tools, extensions to existing tools, and simple web applications for accessing WARC content.","A set of command line tools and an API incorporating libwarc shall enable the collection of online documents, such as html and embedded files, etc., and write them to valid WARC- records.",1
"Utility and application level functionality of WARC Tools shall be made available to end users as command line tools, extensions to existing tools, and simple web applications for accessing WARC content.","Extensions to ""HTTrack"", ""wget"" and ""curl"" incorporating libwarc shall be provided as patches to recent and specific versions of each tool, to enable users of the tool to access functionality of libwarc",1
"Utility and application level functionality of WARC Tools shall be made available to end users as command line tools, extensions to existing tools, and simple web applications for accessing WARC content.","Libwarc shall be shipped with a number of ready-to-use command lines, for example, warcdump (to dump the contents of a WARC file), w-filter, etc.",1
"Utility and application level functionality of WARC Tools shall be made available to end users as command line tools, extensions to existing tools, and simple web applications for accessing WARC content.","Utility and application level functionality of WARC Tools shall be made available to end users as command line tools, extensions to existing tools, and simple web applications for accessing WARC content",1
Communication and support shall be provided to the open source community. This support must be provided for at least term of the project.,Communication and support shall be provided to the open source community. This support must be provided for at least term of the project.,1
"The library and each tool or extension shall be documented for developers and end users, using man pages and other common document forms.",Libwarc shall be shipped with a manual and build scripts,1
"The library and each tool or extension shall be documented for developers and end users, using man pages and other common document forms.","Libwarc shall be shipped with installation guides for Fedora, Debian, FreeBSD, Mac OS X 10.5 and Windows XP.",1
"The library and each tool or extension shall be documented for developers and end users, using man pages and other common document forms.",Libwarc shall be shipped with a developer guide and useful examples.,1
Patches implemented for third party projects shall be contributed and distributed to the appropriate community.,Patches implemented for third party projects shall be contributed and distributed to the appropriate community,1
The code and documentation shall be licensed using an open source license.,"The code and documentation of libwarc shall be licensed to the community using an IIPC approved license, such as Apache 2.0 or BSD licence",1
"Installation scripts and/or instructions shall be made for the library and tools for each target platform, including Linux, Unix and Windows, as well as apache and lighttp installation scripts",Libwarc shall be shipped with a manual and build scripts,1
"Installation scripts and/or instructions shall be made for the library and tools for each target platform, including Linux, Unix and Windows, as well as apache and lighttp installation scripts","Libwarc and associated tools shall be shipped with installers to ""mod_warc"" for Apache (v2.X) and Lighttpd (v1.4.X) servers",1
The WARC Tools shall be implemented as a C library,Libwarc shall be implemented in C and shall conform to ANSI-C standard C99 revision.,1
The WARC Tools shall be implemented as a C library,"To ensure code portability on older computer architectures, Libwarc shall be compatible with any compiler conforming to the ANSI-C standard C89 revision.",1
Library functionality shall have APIs and dynamic language bindings to be made available as software libraries for developers.,"Python scripts shall be implemented incorporating libwarc, and making all of the functionality of libwarc and API available in Python.",1
Library functionality shall have APIs and dynamic language bindings to be made available as software libraries for developers.,"Libwarc shall provide interfaces to SWIG wrappers to allow dynamic language bindings (Python, Ruby, Perl, Lua ...)",1
Library functionality shall have APIs and dynamic language bindings to be made available as software libraries for developers.,A Python interface to libwarc shall be implemented using the SWIG wrapper,1
Library functionality shall have APIs and dynamic language bindings to be made available as software libraries for developers.,"Libwarc and the bindings to its functionality shall enable the use of libwarc's iterators described in SRS 16-20 to be used within various dynamic languages and in Java v1.4 and earlier, using metaphors and paradigms familiar to those languages.",1
"Web server plug-ins shall conform to the Apache 'mod' API and shall operate correctly with both Apache and Lighttp servers and shall be compatible with appropriate web sever programming standards, such as WSGI in Python and the Servlet API in Java.",Libwarc shall be incorporated within an Apache module to enable all actions specified in SRS 34-36 to be executed within Apache.,1
"Web server plug-ins shall conform to the Apache 'mod' API and shall operate correctly with both Apache and Lighttp servers and shall be compatible with appropriate web sever programming standards, such as WSGI in Python and the Servlet API in Java.",Libwarc shall be incorporated within a Lighttp module to enable all actions specified in SRS 34-36 to be executed within lighttp.,1
"The deliverables shall be made available in source code, named as ""libwarc-version.tar.gz"", where version is the version of the library. A number of binary distributions may be made, including RPM, DEB and EXE.","Libwarc source code shall be released in the following archives: ""libwarc-version.tar.gz"", ""libwarc-version.tar.bz2"", ""libwarc-version.zip"" together with their corresponding digests. Developers may then adapt the build configuration files for best performance on their target machines.",1
"The deliverables shall be made available in source code, named as ""libwarc-version.tar.gz"", where version is the version of the library. A number of binary distributions may be made, including RPM, DEB and EXE.","Libwarc binary modules, ready to use binary commands and libraries (both static and shared), compiled with generic optimisation flags, shall be released also",1
"The deliverables shall be made available in source code, named as ""libwarc-version.tar.gz"", where version is the version of the library. A number of binary distributions may be made, including RPM, DEB and EXE.","Libwarc shall be made available as a binary for at least GNU/Linux, FreeBSD, Mac OS X and Windows XP.",1
"The deliverables shall be ported to the following platforms: Linux, FreeBSD, Mac OS X 10.5 and Windows.","Libwarc shall be made available as a binary for at least GNU/Linux, FreeBSD, Mac OS X and Windows XP.",1
"The deliverables shall be ported to the following platforms: Linux, FreeBSD, Mac OS X 10.5 and Windows.","Libwarc shall compile and run under Solaris, AIX, MingW or other Unix compliant system and may compile and run under Windows XP.",1
The final WARC API shall be coded in C with minimum dependencies or external libraries (e.g. GZIP). It must not include any assembly code.,"To ensure code portability on older computer architectures, Libwarc shall be compatible with any compiler conforming to the ANSI-C standard C89 revision.",1
The final WARC API shall be coded in C with minimum dependencies or external libraries (e.g. GZIP). It must not include any assembly code.,"Only essential external libraries shall be used in libwarc, such as Gzip compression and wide characters encoding libraries.",1
The final WARC API shall be coded in C with minimum dependencies or external libraries (e.g. GZIP). It must not include any assembly code.,Assembly code and specific system features shall not be used in libwarc to ensure resulting code is widely portable across multiple target architectures,1
"The C library will be developed in such a way as to allow it to be used with the Simplified Wrapper and Interface Generator, or SWIG, (www.swig.org) in order to wrap the C code and allow it to be called natively in a wide variety of languages.","Libwarc shall provide interfaces to SWIG wrappers to allow dynamic language bindings (Python, Ruby, Perl, Lua ...)",1
An interface implementation may be made for Python to allow the library to be used natively by Python programmers requiring no knowledge of the internal implementation of libwarc or C.,"Python scripts shall be implemented incorporating libwarc, and making all of the functionality of libwarc and API available in Python.",1
An interface implementation may be made for Python to allow the library to be used natively by Python programmers requiring no knowledge of the internal implementation of libwarc or C.,"Libwarc shall provide interfaces to SWIG wrappers to allow dynamic language bindings (Python, Ruby, Perl, Lua ...)",1
An interface implementation may be made for Python to allow the library to be used natively by Python programmers requiring no knowledge of the internal implementation of libwarc or C.,A Python interface to libwarc shall be implemented using the SWIG wrapper,1
An interface implementation shall be made for Java to allow the library to be used natively by Java programmers requiring no knowledge of the internal implementation of libwarc or C.,A Java interface to libwarc shall be implemented using the SWIG wrapper and/or JNI,1
An interface implementation shall be made for Java to allow the library to be used natively by Java programmers requiring no knowledge of the internal implementation of libwarc or C.,An independent Java implementation of libwarc may be implemented subject to review of deliverables satisfying SRS 61,1
An interface implementation shall be made for Java to allow the library to be used natively by Java programmers requiring no knowledge of the internal implementation of libwarc or C.,"Libwarc and the bindings to its functionality shall enable the use of libwarc's iterators described in SRS 16-20 to be used within various dynamic languages and in Java v1.4 and earlier, using metaphors and paradigms familiar to those languages.",1
An interface implementation shall be made for Java to allow the library to be used natively by Java programmers requiring no knowledge of the internal implementation of libwarc or C.,"Libwarc and the bindings to its functionality shall enable the use of libwarc's iterators described in SRS 16-20 to be used within Java v1.5 and and later, using Java's new container iterators, such as ""for"" and ""foreach"".",1
"The functionality of the library shall be exposed in such a way as to fit the metaphors and paradigms of the specific implementation languages (C, Java, Python).","Python scripts shall be implemented incorporating libwarc, and making all of the functionality of libwarc and API available in Python.",1
"The functionality of the library shall be exposed in such a way as to fit the metaphors and paradigms of the specific implementation languages (C, Java, Python).","Libwarc shall provide interfaces to SWIG wrappers to allow dynamic language bindings (Python, Ruby, Perl, Lua ...)",1
"The functionality of the library shall be exposed in such a way as to fit the metaphors and paradigms of the specific implementation languages (C, Java, Python).",A Python interface to libwarc shall be implemented using the SWIG wrapper,1
"The functionality of the library shall be exposed in such a way as to fit the metaphors and paradigms of the specific implementation languages (C, Java, Python).",A Java interface to libwarc shall be implemented using the SWIG wrapper and/or JNI,1
"The functionality of the library shall be exposed in such a way as to fit the metaphors and paradigms of the specific implementation languages (C, Java, Python).",An independent Java implementation of libwarc may be implemented subject to review of deliverables satisfying SRS 61,1
"The functionality of the library shall be exposed in such a way as to fit the metaphors and paradigms of the specific implementation languages (C, Java, Python).","Libwarc and the bindings to its functionality shall enable the use of libwarc's iterators described in SRS 16-20 to be used within various dynamic languages and in Java v1.4 and earlier, using metaphors and paradigms familiar to those languages.",1
"The functionality of the library shall be exposed in such a way as to fit the metaphors and paradigms of the specific implementation languages (C, Java, Python).","Libwarc and the bindings to its functionality shall enable the use of libwarc's iterators described in SRS 16-20 to be used within Java v1.5 and and later, using Java's new container iterators, such as ""for"" and ""foreach"".",1
Any software tool or application based on libwarc shall require just a single header file.,"There shall be a single entry point to libwarc, called ""warc.h"".",1
Any software tool or application based on libwarc shall require just a single header file.,"The ""libwarc"" headers shall be structured in a hierarchical manner. The universal header ""warc.h"" will include all of them.",1
Any software tool or application based on libwarc shall require just a single header file.,"It shall be possible for developers to access, modify and manipulate of all aspects of the WARC file format by including this single header file.",1
Any software tool or application based on libwarc shall require just a single header file.,"The universal header ""warc.h"" shall ensure compatibility between all versions of libwarc.",1
Any software tool or application based on libwarc shall require just a single header file.,"The universal header ""warc.h"" shall ensure that deprecated function calls and changes to the library are notified at compile time.",1
Any software tool or application based on libwarc shall require just a single header file.,"The universal header ""warc.h"" shall provide normalised interfaces to enable developers to create valid and compliant WARC-records, based on the definition in the ""ISO TC 46/SC 4 N 595"" standards document. The interfaces shall be made available to create WARC records of the following types:- ""warinfo""- ""response""- ""request""- ""metadata""- ""revisit""- ""conversion""- ""continuation""- ""resource""",1
"The libwarc interfaces shall fully encapsulate and internal functionality, isolating by abstraction any tool or application based on libwarc from changes in the internal implementation.","The universal header ""warc.h"" shall ensure compatibility between all versions of libwarc.",1
"The libwarc interfaces shall fully encapsulate and internal functionality, isolating by abstraction any tool or application based on libwarc from changes in the internal implementation.","The universal header ""warc.h"" shall ensure that deprecated function calls and changes to the library are notified at compile time.",1
"The libwarc interfaces shall fully encapsulate and internal functionality, isolating by abstraction any tool or application based on libwarc from changes in the internal implementation.","The interfaces in libwarc shall ensure that any changes to the library, will not affect any tool or application based on libwarc.",1
"The libwarc interfaces shall fully encapsulate and internal functionality, isolating by abstraction any tool or application based on libwarc from changes in the internal implementation.","Libwarc shall provide an API describing (1) the set of data, and (2) the set of operations that can be performed on the data. The data types shall be abstract (abstract data types - ADT), to ensure independence of concrete implementations.",1
"The libwarc interfaces shall fully encapsulate and internal functionality, isolating by abstraction any tool or application based on libwarc from changes in the internal implementation.",Libwarc shall encapsulate and handle all memory management when processing WARCrecords.,1
"The libwarc interfaces shall fully encapsulate and internal functionality, isolating by abstraction any tool or application based on libwarc from changes in the internal implementation.","Major revisions to the WARC ISO standard may lead to revisions of libwarc, but these revisions should be isolated and not affect any tools developed incorporating libwarc",1
"Libwarc shall provide a range of functions through a universal interface for creating each type of valid WARC-record, thus ensuring the resulting WARC files conform to the prevailing WARC standard","The universal header ""warc.h"" shall provide normalised interfaces to enable developers to create valid and compliant WARC-records, based on the definition in the ""ISO TC 46/SC 4 N 595"" standards document. The interfaces shall be made available to create WARC records of the following types:- ""warinfo""- ""response""- ""request""- ""metadata""- ""revisit""- ""conversion""- ""continuation""- ""resource""",1
"For each type of WARC-record, a set of functions shall be made available to create/modify the records properties.",Each WARC-record shall be accessible via a peer C class of the same name.,1
"For each type of WARC-record, a set of functions shall be made available to create/modify the records properties.","The attributes of each WARC-record, as per the ISO standard specification, shall have a corresponding attribute in its peer C class.",1
"For each type of WARC-record, a set of functions shall be made available to create/modify the records properties.","Each peer class shall expose a set a class functions to read, write, and update attributes for the corresponding WARC-record.",1
Libwarc shall provide a range of functions through a universal interface for reading a range of valid WARC-records,"Libwarc shall provide an API describing (1) the set of data, and (2) the set of operations that can be performed on the data. The data types shall be abstract (abstract data types - ADT), to ensure independence of concrete implementations.",1
Libwarc shall provide a range of functions through a universal interface for reading a range of valid WARC-records,Any operations on WARC-records shall be possible using functions accepting the abstract handle as an argument.,1
Libwarc shall provide a stable Application Programme Interface (API) to handle WARCrecords as abstract objects (ADT),"Libwarc shall provide an API describing (1) the set of data, and (2) the set of operations that can be performed on the data. The data types shall be abstract (abstract data types - ADT), to ensure independence of concrete implementations.",1
Libwarc shall provide a stable Application Programme Interface (API) to handle WARCrecords as abstract objects (ADT),"It shall be possible to create a WARC-record using a constructor, which will returns an abstract handle to data representing the WARC-record.",1
Libwarc shall provide a stable Application Programme Interface (API) to handle WARCrecords as abstract objects (ADT),Any operations on WARC-records shall be possible using functions accepting the abstract handle as an argument.,1
Libwarc shall provide ARC-record reader functionality Libwarc reader will thereby make read operations as simple as possible.,SRS 15 -Libwarc shall include ADT objects to handle read operations on ARC-records,1
Libwarc shall provide a default iterator as a built-in function,"Libwarc shall provide a generic iterator, to enable the developer to iterate over all WARCrecords and create an abstract WARC-document as a simple container",1
Libwarc shall provide a records iterator to handle WARC-type records,"Libwarc shall provide a generic iterator, to enable the developer to iterate over all WARCrecords and create an abstract WARC-document as a simple container",1
Libwarc shall provide a records iterator to handle WARC-type records,Libwarc shall provide a WARC-record-type iterator,1
Libwarc shall provide a MIMES iterator to handle MIME-types payloads,Libwarc shall provide a WARC-record MIME-type iterator,1
Iterators can use exact pattern search or regex expressions,Libwarc's generic iterators may be customised for different purposes via callback handlers (i.e. hooks),1
"Libwarc shall provide an abstract interface for iterators, to enable custom iterators",Libwarc's generic iterators may be customised for different purposes via callback handlers (i.e. hooks),1
"Libwarc shall enable combinations of iterators to be used, i.e. composite iterators",Libwarc's iterators may be combined into composite iterators to enable the developer to more than one search field,1
Libwarc shall be memory safe and manage dynamic memory internally,Libwarc shall encapsulate and handle all memory management when processing WARCrecords.,1
Libwarc shall be memory safe and manage dynamic memory internally,"Developers using libwarc shall not be required to allocate/release memory directly, instead the developer shall use libwarc's object constructor and destructor functions.",1
Libwarc shall be memory safe and manage dynamic memory internally,Libwarc shall use dynamic heap memory for its internal usage.,1
Libwarc shall be memory safe and manage dynamic memory internally,Libwarc shall allocate minimum memory heap to store WARC-record metadata.,1
Libwarc shall be memory safe and manage dynamic memory internally,"The payload (or the WARC-record document itself) are stored on disk, to avoid using memory heap, even for small objects.",1
Libwarc shall be memory safe and manage dynamic memory internally,"Libwarc shall not use file to memory mapping technology, instead libwarc will explicitly allocate memory as needed.",1
Libwarc shall use disk-based working memory,"The payload (or the WARC-record document itself) are stored on disk, to avoid using memory heap, even for small objects.",1
Dynamic memory management shall be hidden inside libwarc,Libwarc shall encapsulate and handle all memory management when processing WARCrecords.,1
Dynamic memory management shall be hidden inside libwarc,"Developers using libwarc shall not be required to allocate/release memory directly, instead the developer shall use libwarc's object constructor and destructor functions.",1
Dynamic memory management shall be hidden inside libwarc,Libwarc shall use dynamic heap memory for its internal usage.,1
Dynamic memory management shall be hidden inside libwarc,Libwarc shall allocate minimum memory heap to store WARC-record metadata.,1
Dynamic memory management shall be hidden inside libwarc,"The payload (or the WARC-record document itself) are stored on disk, to avoid using memory heap, even for small objects.",1
Dynamic memory management shall be hidden inside libwarc,"Libwarc shall not use file to memory mapping technology, instead libwarc will explicitly allocate memory as needed.",1
Libwarc shall use gzip as the default compression format,Libwarc shall support non-compressed WARC-records and compressed WARC-records and files,1
Libwarc shall use gzip as the default compression format,The default compression format shall be Gzip,1
"Libwarc shall provide a plug-in interface to enable use of alternative compression libraries, such as ""gzip2"", ""7zip"", etc.","Libwarc shall support multiple compression schemas, loading a specific compressor at runtime as an external shared library.",1
"Libwarc shall provide a plug-in interface to enable use of alternative compression libraries, such as ""gzip2"", ""7zip"", etc.",It shall not be possible to use more than one compression schema (including noncompression) within a single WARC file. (i.e. it is not possible to mix compression schemes within a single WARC file).,1
"WARC files shall be validated using a command line tool, ""w-validator"", which will enable validation or rejection of WARC files.",A command line tool shall be implemented utilising libwarc to check the consistency of WARC-records and their conformance to the WARC ISO standard.,1
"WARC files shall be validated using a command line tool, ""w-validator"", which will enable validation or rejection of WARC files.","The command line tool shall notify the user of any WARC-record's anomalies, missing required fields or incompatible fields types.",1
WARC Browser shall provide an API that allows browsing of WARC files and associated CDX files via an HTTP server,"It shall be possible to perform read operations (read from offset, filters, etc.) on WARCrecords from a remote location via http.",1
WARC Browser shall provide an API that allows browsing of WARC files and associated CDX files via an HTTP server,WARC browser shall not support CDX files because the CDX file format is not a standard at this time and is outside of scope.,1
WARC Browser shall support a rewriting interface,WARC Browser shall support a client-side rewriting interface by using javascript code to rewrite links being delivered alongside archived content. This is based on the principles implemented in the Wayback Machine.,1
WARC Browser shall support a proxy-style interface,SRS 38 -A web proxy interface shall be implemented that allows the user to set their web browser proxy to the one provided by the interface and thereby ensure all content is delivered from the archive and not from the live web.,1
An Apache and Lighttp plug-in shall provide access to the libwarc API and WARC Browser over http,Libwarc shall be incorporated within an Apache module to enable all actions specified in SRS 34-36 to be executed within Apache.,1
An Apache and Lighttp plug-in shall provide access to the libwarc API and WARC Browser over http,Libwarc shall be incorporated within a Lighttp module to enable all actions specified in SRS 34-36 to be executed within lighttp.,1
"It shall be possible to convert ARC files to WARC files using a command-line tool called ""arc2warc""","A command line tool ""arc2warc"" incorporating libwarc shall be able to migrate data in ARC-records to WARC-record format.",1
"It shall be possible to convert ARC files to WARC files using a command-line tool called ""arc2warc""","The default operation of ""arc2warc"" shall carry out a one-to-one mapping of record fields, by converting each ARC-record to a corresponding ""response"" WARC-record and ""metadata"" WARCrecord, which shall include information about the conversion process.",1
"It shall be possible to convert ARC files to WARC files using a command-line tool called ""arc2warc""","""arc2warc"" shall have make a default operation in cases where an ARC-record has no corresponding field in the WARC-record.",1
ARC to WARC conversions made by arc2warc shall be carried out according to a specification in a configuration file,"It shall be possible to specify non-default operations of ""arc2warc"" using a named configuration file, which will describe the desired ARC-record to WARC-record conversion.",1
It shall be possible to collect HTTrack data from the directories output by HTTrack and write the data to WARC files,"A set of command line tools incorporating libwarc shall perform migration of ""HTTrack"" archives to WARC-records.",1
It shall be possible to collect HTTrack data from the directories output by HTTrack and write the data to WARC files,"The HTTrack archive file format and link strategy may vary from version to version of HTTrack, therefore it shall be possible to adapt the migration scripts to deal with these changes.",1
It shall be possible to walk a wget mirror and write the data to WARC files,"A set of command line tools incorporating libwarc shall perform migration of ""wget"" archives to WARC-records.",1
It shall be possible to walk a curl directory and write the data to WARC files,"A set of command line tools incorporating libwarc shall perform migration of ""curl"" archives to WARC-records.",1
"It shall be possible to collect arbitrary web content, such as html files, images etc. (for example from a web server document root directory), and write the data to WARC files","A set of command line tools and an API incorporating libwarc shall enable the collection of online documents, such as html and embedded files, etc., and write them to valid WARC- records.",1
A Python script shall be made available to enable rapid development of WARC based solutions,"Python scripts shall be implemented incorporating libwarc, and making all of the functionality of libwarc and API available in Python.",1
"WARC extensions shall be released as a patch to each of the commands ""curl"", ""wget"", and ""httrack"" projects","Extensions to ""HTTrack"", ""wget"" and ""curl"" incorporating libwarc shall be provided as patches to recent and specific versions of each tool, to enable users of the tool to access functionality of libwarc",1
"WARC extensions help content will be provided each of the commands ""curl"", ""wget"", and ""httrack""","Helper documentation for libwarc functionality shall be made available within the ""HTTrack"", ""wget"" and ""curl"" commands.",1
"It shall be possible to identify WARC files using the unix ""file"" command","A magic number for WARC shall be created and incorporated in the ""file"" mime-type database, enabling the simple identification of WARC files via the Unix ""file"" command",1
"It shall be possible to identify and validate WARC files using ""Jhove""","The WARC validator tool specified in SRS 31-32 shall be extended to optionally make use of the Jhove command line API to identify and validate WARC files, i.e. given a specific WARC file, this command shall be able to identify the file as a WARC file, validate the level of compliance with a given standard in terms of well-formedness and validity, and finally to characterise the file by extracting and displaying significant properties contained in the file.",1
"It shall be possible to identify and validate WARC files using ""Jhove""",WarcMdoule and WarcHandler plugin modules shall be implemented for Jhove Plugin layer to enable identification and validation of WARC files.,1
A Jhove plugin module and an output handler shall be made available for WARC files,WarcMdoule and WarcHandler plugin modules shall be implemented for Jhove Plugin layer to enable identification and validation of WARC files.,1
WARC files in various test-states shall be provided that test the Jhove deliverables,WARC files in various test-states shall be provided that test the Jhove deliverables,1
"The C library shall be implemented to be compatible with the Simplified Wrapper and Interface Generator (SWIG, http://www.swig.org) - a wrapper for libwarc C code to allow it to be called natively in a wide variety of languages.","Libwarc shall provide interfaces to SWIG wrappers to allow dynamic language bindings (Python, Ruby, Perl, Lua ...)",1
A Python interface shall be implemented,"Python scripts shall be implemented incorporating libwarc, and making all of the functionality of libwarc and API available in Python.",1
A Python interface shall be implemented,A Python interface to libwarc shall be implemented using the SWIG wrapper,1
A Java interface shall be implemented,A Java interface to libwarc shall be implemented using the SWIG wrapper and/or JNI,1
An independent Java implementation of libwarc may be implemented,An independent Java implementation of libwarc may be implemented subject to review of deliverables satisfying SRS 61,1
The functionality of the library shall be exposed in such a way as to fit the metaphors and paradigms of the implementation language,"Libwarc and the bindings to its functionality shall enable the use of libwarc's iterators described in SRS 16-20 to be used within various dynamic languages and in Java v1.4 and earlier, using metaphors and paradigms familiar to those languages.",1
The functionality of the library shall be exposed in such a way as to fit the metaphors and paradigms of the implementation language,"Libwarc and the bindings to its functionality shall enable the use of libwarc's iterators described in SRS 16-20 to be used within Java v1.5 and and later, using Java's new container iterators, such as ""for"" and ""foreach"".",1
A Jhove plugin module and an output handler shall be made available for WARC files,GUI needs to provide ability to show utilization of a person.,0
Libwarc shall provide a range of functions through a universal interface for reading a range of valid WARC-records,"It shall be possible to perform read operations (read from offset, filters, etc.) on WARCrecords from a remote location via http.",0
Libwarc shall provide a stable Application Programme Interface (API) to handle WARCrecords as abstract objects (ADT),"Every time Start/End time for a subtask changes, the start/end time for the parent task need to change accordingly.",0
Libwarc shall provide a MIMES iterator to handle MIME-types payloads,"The universal header ""warc.h"" shall ensure that deprecated function calls and changes to the library are notified at compile time.",0
Add/Remove Resources to Tasks Dependencies;Dependencies between tasks and resources indicate the resources who are supposed to complete a task. Each task could be worked on by multiple persons and each person could work on multiple tasks. Dependencies may also be annotated to capture how many hours each person is supposed to work on a task on a daily basis.,"The interfaces in libwarc shall ensure that any changes to the library, will not affect any tool or application based on libwarc.",0
"For each type of WARC-record, a set of functions shall be made available to create/modify the records properties.",User should be able to create milestones.,0
Libwarc shall use gzip as the default compression format,"Python scripts shall be implemented incorporating libwarc, and making all of the functionality of libwarc and API available in Python.",0
"Utility and application level functionality of WARC Tools shall be made available to end users as command line tools, extensions to existing tools, and simple web applications for accessing WARC content.",A GUI provides interface and functions to edit the properties of objects of the human resource class.,0
Libwarc shall provide a stable Application Programme Interface (API) to handle WARCrecords as abstract objects (ADT),Libwarc shall encapsulate and handle all memory management when processing WARCrecords.,0
"The functionality of the library shall be exposed in such a way as to fit the metaphors and paradigms of the specific implementation languages (C, Java, Python).",GUI needs to provide ability to assign persons to tasks.,0
An independent Java implementation of libwarc may be implemented,"To delete a task from the Calendar the GanttProject class call delete method and supplied TaskId paramenter. The adjustment of allocated resources and links to other tasks takes place through interfacing with the following classes DefaultMutableTreeNode, GanttTreeTableNode, TaskNode, and AdjustTaskBoundsAlgorithm.",0
A Python interface shall be implemented,Libwarc shall encapsulate and handle all memory management when processing WARCrecords.,0
Create a new task which typically has a  start date and an end date. Tasks are activities that one or more persons resources are expected to complete in the specified time frame.,A collection of resource assignments is used to manage the relationships between multiple human resources and a single task. It contains multiple objects of the human resource assignment class. The collection provides functions to add and remove human resource assignments.,0
Libwarc shall provide a records iterator to handle WARC-type records,GUI needs to provide ability to assign persons to tasks.,0
An Apache and Lighttp plug-in shall provide access to the libwarc API and WARC Browser over http,"The ""libwarc"" headers shall be structured in a hierarchical manner. The universal header ""warc.h"" will include all of them.",0
Libwarc shall provide ARC-record reader functionality Libwarc reader will thereby make read operations as simple as possible.,"Utility and application level functionality of WARC Tools shall be made available to end users as command line tools, extensions to existing tools, and simple web applications for accessing WARC content",0
"Libwarc shall enable combinations of iterators to be used, i.e. composite iterators",A human resource assignment class is used to represent the relationship between one task and one human resource. The class provides functions to get the task and the human resource. ,0
A Jhove plugin module and an output handler shall be made available for WARC files,It shall not be possible to use more than one compression schema (including noncompression) within a single WARC file. (i.e. it is not possible to mix compression schemes within a single WARC file).,0
The WARC Tools shall be implemented as a C library,An independent Java implementation of libwarc may be implemented subject to review of deliverables satisfying SRS 61,0
An interface implementation shall be made for Java to allow the library to be used natively by Java programmers requiring no knowledge of the internal implementation of libwarc or C.,The Task class provides a public method SetStart() which allows to specify starting date for the task. As input argument the method takes an object of GanttCalendar class. ,0
"The deliverables shall be made available in source code, named as ""libwarc-version.tar.gz"", where version is the version of the library. A number of binary distributions may be made, including RPM, DEB and EXE.","A set of command line tools incorporating libwarc shall perform migration of ""wget"" archives to WARC-records.",0
Libwarc shall use disk-based working memory,It shall not be possible to use more than one compression schema (including noncompression) within a single WARC file. (i.e. it is not possible to mix compression schemes within a single WARC file).,0
Communication and support shall be provided to the open source community. This support must be provided for at least term of the project.,The start and end dates for the graph can be either flexible or rigid for the purpose of adjusting and fixing potential collisions. ,0
Libwarc shall use disk-based working memory,Application needs to keep track of subtasks in a task.,0
Libwarc shall provide a records iterator to handle WARC-type records,A class is used to represent the constraint that the start date of the dependee task should not be earlier than the end date of the dependent task.,0
Change Task Begin/End Times automatically with dependency changes; The start or end date should be changed automatically if one of its subtasks changes.,"Libwarc shall provide an API describing (1) the set of data, and (2) the set of operations that can be performed on the data. The data types shall be abstract (abstract data types - ADT), to ensure independence of concrete implementations.",0
It shall be possible to collect HTTrack data from the directories output by HTTrack and write the data to WARC files,"The interfaces in libwarc shall ensure that any changes to the library, will not affect any tool or application based on libwarc.",0
"The C library shall be implemented to be compatible with the Simplified Wrapper and Interface Generator (SWIG, http://www.swig.org) - a wrapper for libwarc C code to allow it to be called natively in a wide variety of languages.","The HTTrack archive file format and link strategy may vary from version to version of HTTrack, therefore it shall be possible to adapt the migration scripts to deal with these changes.",0
A Python interface shall be implemented,A class is used to represent the constraint that the start date of the dependee task should not be earlier than the end date of the dependent task.,0
"WARC Tools shall be highly portable, running on a range of Linux/Unix platforms and XP as a minimum, together with man pages, build and installation guides, developer guides, etc.",A GUI class of task property provides interface and functions to add and remove dependencies by using an object of the dependency collection.,0
Libwarc shall provide ARC-record reader functionality Libwarc reader will thereby make read operations as simple as possible.,To remove tasks as subtasks GanttTree2 class calls a method which dedent selected task nodes in GUI so that they will not be subtasks of their original parents tasks. An object of a class is used to remove relationship between selected tasks and their original parents and add relationship between selected tasks and their new parents.,0
"It shall be possible to identify WARC files using the unix ""file"" command","Libwarc binary modules, ready to use binary commands and libraries (both static and shared), compiled with generic optimisation flags, shall be released also",0
"WARC extensions help content will be provided each of the commands ""curl"", ""wget"", and ""httrack""",SRS 38 -A web proxy interface shall be implemented that allows the user to set their web browser proxy to the one provided by the interface and thereby ensure all content is delivered from the archive and not from the live web.,0
Libwarc shall provide a default iterator as a built-in function,"Each peer class shall expose a set a class functions to read, write, and update attributes for the corresponding WARC-record.",0
Show Critical Path; The critical path indicates which tasks will cause project delays if they are delayed.,Libwarc's iterators may be combined into composite iterators to enable the developer to more than one search field,0
"Maintain task properties;  Edit and update task properties including start and end date, name, or progress(% complete).",The Task class provides a public method SetEnd() which allows to specify starting date for the task. As input argument the method takes an object of GanttCalendar class.,0
"Handle Milestones; A milestone is a special task. Whereas a task typically has a timeframe specified (the time needed to complete the task), a milestone is typically an event. For example, the release date of a software is an event rather than a timeframe.","Libwarc shall not use file to memory mapping technology, instead libwarc will explicitly allocate memory as needed.",0
"Libwarc shall enable combinations of iterators to be used, i.e. composite iterators",Libwarc shall be implemented in C and shall conform to ANSI-C standard C99 revision.,0
Library functionality shall have APIs and dynamic language bindings to be made available as software libraries for developers.,A command line tool shall be implemented utilising libwarc to check the consistency of WARC-records and their conformance to the WARC ISO standard.,0
"Maintain task properties;  Edit and update task properties including start and end date, name, or progress(% complete).",An object of the recalculating task schedule algorithm class is used to change the start or end date based on dependency changes. The algorithm class provides functions to fulfill the constraints and to modify the start or end date of the tasks.,0
Delete Resources (person); Delete a person and all its associated information such as dependencies to all tasks the person is supposed to work on.,"Every time Start/End time for a subtask changes, the start/end time for the parent task need to change accordingly.",0
Delete Tasks; Delete an existing task and all its associated information such as links to other tasks or knowledge on what resources are supposed to work on them.,The class of dependency collection provides a function to check if the new dependency will cause a loop each time a object of dependency class is created. The function returns an exception if there is a loop. ,0
WARC Browser shall support a rewriting interface,The task manager class uses an object of dependency collection class to manage dependencies.,0
A Python script shall be made available to enable rapid development of WARC based solutions,"It shall be possible to specify non-default operations of ""arc2warc"" using a named configuration file, which will describe the desired ARC-record to WARC-record conversion.",0
"Libwarc shall provide a plug-in interface to enable use of alternative compression libraries, such as ""gzip2"", ""7zip"", etc.","It shall be possible to perform read operations (read from offset, filters, etc.) on WARCrecords from a remote location via http.",0
"It shall be possible to collect arbitrary web content, such as html files, images etc. (for example from a web server document root directory), and write the data to WARC files","The WARC validator tool specified in SRS 31-32 shall be extended to optionally make use of the Jhove command line API to identify and validate WARC files, i.e. given a specific WARC file, this command shall be able to identify the file as a WARC file, validate the level of compliance with a given standard in terms of well-formedness and validity, and finally to characterise the file by extracting and displaying significant properties contained in the file.",0
"Web server plug-ins shall conform to the Apache 'mod' API and shall operate correctly with both Apache and Lighttp servers and shall be compatible with appropriate web sever programming standards, such as WSGI in Python and the Servlet API in Java.",Libwarc's iterators may be combined into composite iterators to enable the developer to more than one search field,0
"Add/Remove Task links; Tasks can be linked with one another to indicate the sequence in which they have to be performed. For example, if there is a link from task 1 to task 2 then task 2 can only be started after task 1 is completed. The start date of task 2 must thus be after the end date of task 1.",Libwarc shall use dynamic heap memory for its internal usage.,0
"For each type of WARC-record, a set of functions shall be made available to create/modify the records properties.",A GUI class of graphic area provides a function to draw dependency. The function uses an object of the task manager to add dependencies.1,0
"Maintain Resource Properties;A resource has a range of properties, including name and holidays","There shall be a single entry point to libwarc, called ""warc.h"".",0
"WARC Tools shall be highly portable, running on a range of Linux/Unix platforms and XP as a minimum, together with man pages, build and installation guides, developer guides, etc.",GUI needs to provide ability to show is a person is  underutilized and overbooked.,0
"The core functionality of WARC Tools, specifically the WARC writer/reader, shall be implemented as a comprehensive, standalone, general purpose software library - libwarc.",Libwarc shall provide a WARC-record MIME-type iterator,0
The final WARC API shall be coded in C with minimum dependencies or external libraries (e.g. GZIP). It must not include any assembly code.,WarcMdoule and WarcHandler plugin modules shall be implemented for Jhove Plugin layer to enable identification and validation of WARC files.,0
ARC to WARC conversions made by arc2warc shall be carried out according to a specification in a configuration file,It shall not be possible to use more than one compression schema (including noncompression) within a single WARC file. (i.e. it is not possible to mix compression schemes within a single WARC file).,0
"Handle Milestones; A milestone is a special task. Whereas a task typically has a timeframe specified (the time needed to complete the task), a milestone is typically an event. For example, the release date of a software is an event rather than a timeframe.",Using GUI user should be able to change the length of a task by dragging-and-dropping the bar on the GUI.,0
Patches implemented for third party projects shall be contributed and distributed to the appropriate community.,"Libwarc and the bindings to its functionality shall enable the use of libwarc's iterators described in SRS 16-20 to be used within various dynamic languages and in Java v1.4 and earlier, using metaphors and paradigms familiar to those languages.",0
It shall be possible to collect HTTrack data from the directories output by HTTrack and write the data to WARC files,The class of dependency collection provides a function to check if the new dependency will cause a loop each time a object of dependency class is created. The function returns an exception if there is a loop. ,0
"Show Resource Utilization (underused or overused person);Tasks may be assigned to persons and it should be indicated if a person receives more tasks than he/she is able to handle (e.g., the person hours per  task for all tasks exceeds the allowed 8 hours a day) or if the person is not available due to holidays or vacation days. it should also be indicated if the person is under-utilized in that he/she is working less than the 8 hours a day.",Patches implemented for third party projects shall be contributed and distributed to the appropriate community,0
Libwarc shall use gzip as the default compression format,"Libwarc and the bindings to its functionality shall enable the use of libwarc's iterators described in SRS 16-20 to be used within Java v1.5 and and later, using Java's new container iterators, such as ""for"" and ""foreach"".",0
"WARC extensions help content will be provided each of the commands ""curl"", ""wget"", and ""httrack""","Libwarc and associated tools shall be shipped with installers to ""mod_warc"" for Apache (v2.X) and Lighttpd (v1.4.X) servers",0
"Show Resource Utilization (underused or overused person);Tasks may be assigned to persons and it should be indicated if a person receives more tasks than he/she is able to handle (e.g., the person hours per  task for all tasks exceeds the allowed 8 hours a day) or if the person is not available due to holidays or vacation days. it should also be indicated if the person is under-utilized in that he/she is working less than the 8 hours a day.",GUI needs to provide ability to change length of a task.,0
"The library and each tool or extension shall be documented for developers and end users, using man pages and other common document forms.",GUI needs to provide ability to show is a person is  underutilized and overbooked.,0
Change Task Begin/End Times manually with user changes; Change the start or end date either by editing its properties or by dragging-and-dropping the bar in the GUI.,"The attributes of each WARC-record, as per the ISO standard specification, shall have a corresponding attribute in its peer C class.",0
"Maintain task properties;  Edit and update task properties including start and end date, name, or progress(% complete).","There is a class to represent holiday. The holiday class provides functions to set the begin date and the end date of the holiday, to check if a date is in the holiday, and to get the duration of the holiday.",0
Libwarc shall use disk-based working memory,The system should be able to evaluate critical path in a project.,0
Iterators can use exact pattern search or regex expressions,SRS 15 -Libwarc shall include ADT objects to handle read operations on ARC-records,0
"It shall be possible to convert ARC files to WARC files using a command-line tool called ""arc2warc""",The human resource class provides a function to change the availability of the person based on holidays. ,0
An independent Java implementation of libwarc may be implemented,SRS 15 -Libwarc shall include ADT objects to handle read operations on ARC-records,0
Add/Remove Resources to Tasks Dependencies;Dependencies between tasks and resources indicate the resources who are supposed to complete a task. Each task could be worked on by multiple persons and each person could work on multiple tasks. Dependencies may also be annotated to capture how many hours each person is supposed to work on a task on a daily basis.,"Each peer class shall expose a set a class functions to read, write, and update attributes for the corresponding WARC-record.",0
A Python interface shall be implemented,"The universal header ""warc.h"" shall provide normalised interfaces to enable developers to create valid and compliant WARC-records, based on the definition in the ""ISO TC 46/SC 4 N 595"" standards document. The interfaces shall be made available to create WARC records of the following types:- ""warinfo""- ""response""- ""request""- ""metadata""- ""revisit""- ""conversion""- ""continuation""- ""resource""",0
The code and documentation shall be licensed using an open source license.,Libwarc shall provide a WARC-record MIME-type iterator,0
Create Resources (person);GanttProject supports Persons as resources. Persons have names and holidays or vacation days. Persons can be assigned to work on tasks.,A class is used to represent the dependency between one task and one human resource. The dependency class provides functions to get the task and the human resource. ,0
Prevent Circular Dependencies;Links among tasks may not be circular in that task 1 cannot depend on task 2 if task 2 already depends on task 1.,"Libwarc and the bindings to its functionality shall enable the use of libwarc's iterators described in SRS 16-20 to be used within Java v1.5 and and later, using Java's new container iterators, such as ""for"" and ""foreach"".",0
"Libwarc shall provide a range of functions through a universal interface for creating each type of valid WARC-record, thus ensuring the resulting WARC files conform to the prevailing WARC standard","A set of command line tools incorporating libwarc shall perform migration of ""curl"" archives to WARC-records.",0
"For each type of WARC-record, a set of functions shall be made available to create/modify the records properties.",A command line tool shall be implemented utilising libwarc to check the consistency of WARC-records and their conformance to the WARC ISO standard.,0
"WARC Tools shall be highly portable, running on a range of Linux/Unix platforms and XP as a minimum, together with man pages, build and installation guides, developer guides, etc.",A GUI class of human resource load distribution uses objects of a load distribution class to capture the hours each person is supposed to work.,0
Change Task Begin/End Times automatically with dependency changes;The start or end date should be changed automatically if links among tasks are changed,A Java interface to libwarc shall be implemented using the SWIG wrapper and/or JNI,0
Libwarc shall provide a MIMES iterator to handle MIME-types payloads,Communication and support shall be provided to the open source community. This support must be provided for at least term of the project.,0
Libwarc shall provide a records iterator to handle WARC-type records,"The universal header ""warc.h"" shall ensure that deprecated function calls and changes to the library are notified at compile time.",0
An Apache and Lighttp plug-in shall provide access to the libwarc API and WARC Browser over http,"Utility and application level functionality of WARC Tools shall be made available to end users as command line tools, extensions to existing tools, and simple web applications for accessing WARC content",0
Create a new task which typically has a  start date and an end date. Tasks are activities that one or more persons resources are expected to complete in the specified time frame.,The human resource class contains the variable holidays. The class provides functions to change and to get holidays. There can be multiple holidays. ,0
"The deliverables shall be made available in source code, named as ""libwarc-version.tar.gz"", where version is the version of the library. A number of binary distributions may be made, including RPM, DEB and EXE.",WARC Browser shall support a client-side rewriting interface by using javascript code to rewrite links being delivered alongside archived content. This is based on the principles implemented in the Wayback Machine.,0
A Jhove plugin module and an output handler shall be made available for WARC files,Libwarc shall be incorporated within an Apache module to enable all actions specified in SRS 34-36 to be executed within Apache.,0
"The C library shall be implemented to be compatible with the Simplified Wrapper and Interface Generator (SWIG, http://www.swig.org) - a wrapper for libwarc C code to allow it to be called natively in a wide variety of languages.","The payload (or the WARC-record document itself) are stored on disk, to avoid using memory heap, even for small objects.",0
The WARC Tools shall be implemented as a C library,"Extensions to ""HTTrack"", ""wget"" and ""curl"" incorporating libwarc shall be provided as patches to recent and specific versions of each tool, to enable users of the tool to access functionality of libwarc",0
"The core functionality of WARC Tools, specifically the WARC writer/reader, shall be implemented as a comprehensive, standalone, general purpose software library - libwarc.",An object of the recalculating task schedule algorithm class is used to change the start or end date based on dependency changes. The algorithm class provides functions to fulfill the constraints and to modify the start or end date of the tasks.,0
"Maintain Resource Properties;A resource has a range of properties, including name and holidays",A GUI class of graphic area provides function to draw dependency. The function uses an object of task manager to add dependencies.,0
It shall be possible to walk a curl directory and write the data to WARC files,SRS 38 -A web proxy interface shall be implemented that allows the user to set their web browser proxy to the one provided by the interface and thereby ensure all content is delivered from the archive and not from the live web.,0
Libwarc shall provide a MIMES iterator to handle MIME-types payloads,"There shall be a single entry point to libwarc, called ""warc.h"".",0
"It shall be possible to convert ARC files to WARC files using a command-line tool called ""arc2warc""",The fact of linking of one task to another should be captured as dependency between two tasks.,0
WARC v0.17 shall be the baseline version of the WARC standard used in this project.,"Libwarc source code shall be released in the following archives: ""libwarc-version.tar.gz"", ""libwarc-version.tar.bz2"", ""libwarc-version.zip"" together with their corresponding digests. Developers may then adapt the build configuration files for best performance on their target machines.",0
"WARC files shall be validated using a command line tool, ""w-validator"", which will enable validation or rejection of WARC files.",Libwarc shall be incorporated within a Lighttp module to enable all actions specified in SRS 34-36 to be executed within lighttp.,0
WARC Browser shall support a rewriting interface,WarcMdoule and WarcHandler plugin modules shall be implemented for Jhove Plugin layer to enable identification and validation of WARC files.,0
WARC Browser shall provide an API that allows browsing of WARC files and associated CDX files via an HTTP server,Libwarc's generic iterators may be customised for different purposes via callback handlers (i.e. hooks),0
The code and documentation shall be licensed using an open source license.,The start and end dates for the graph can be either flexible or rigid for the purpose of adjusting and fixing potential collisions. ,0
"Add/Remove Task links; Tasks can be linked with one another to indicate the sequence in which they have to be performed. For example, if there is a link from task 1 to task 2 then task 2 can only be started after task 1 is completed. The start date of task 2 must thus be after the end date of task 1.",A collection of resource assignments is used to manage the relationships between multiple human resources and a single task. It contains multiple objects of the human resource assignment class. The collection provides functions to add and remove human resource assignments.,0
"The C library shall be implemented to be compatible with the Simplified Wrapper and Interface Generator (SWIG, http://www.swig.org) - a wrapper for libwarc C code to allow it to be called natively in a wide variety of languages.",A GUI of task property provides interface and functions to add and remove human resource assignments by using an object of the resource assignments collection class.,0
Any software tool or application based on libwarc shall require just a single header file.,GUI needs to provide ability to show is a person is  underutilized and overbooked.,0
The final WARC API shall be coded in C with minimum dependencies or external libraries (e.g. GZIP). It must not include any assembly code.,"It shall be possible for developers to access, modify and manipulate of all aspects of the WARC file format by including this single header file.",0
Library functionality shall have APIs and dynamic language bindings to be made available as software libraries for developers.,Libwarc shall support non-compressed WARC-records and compressed WARC-records and files,0
"Show Resource Utilization (underused or overused person);Tasks may be assigned to persons and it should be indicated if a person receives more tasks than he/she is able to handle (e.g., the person hours per  task for all tasks exceeds the allowed 8 hours a day) or if the person is not available due to holidays or vacation days. it should also be indicated if the person is under-utilized in that he/she is working less than the 8 hours a day.","The command line tool shall notify the user of any WARC-record's anomalies, missing required fields or incompatible fields types.",0
Create Resources (person);GanttProject supports Persons as resources. Persons have names and holidays or vacation days. Persons can be assigned to work on tasks.,GUI should able to provide ability to set progress on a task.,0
"The C library shall be implemented to be compatible with the Simplified Wrapper and Interface Generator (SWIG, http://www.swig.org) - a wrapper for libwarc C code to allow it to be called natively in a wide variety of languages.",A collection of resource assignments is used to manage the relationships between multiple human resources and a single task. It contains multiple objects of the human resource assignment class. The collection provides functions to add and remove human resource assignments.,0
"Libwarc shall provide an abstract interface for iterators, to enable custom iterators",A collection of resource assignments is used to manage the relationships between multiple human resources and a single task. It contains multiple objects of the human resource assignment class. The collection provides functions to add and remove human resource assignments.,0
The final WARC API shall be coded in C with minimum dependencies or external libraries (e.g. GZIP). It must not include any assembly code.,"Libwarc shall be made available as a binary for at least GNU/Linux, FreeBSD, Mac OS X and Windows XP.",0
Libwarc shall provide a default iterator as a built-in function,The system should be able to evaluate critical path in a project.,0
Libwarc shall provide a records iterator to handle WARC-type records,The fact of linking of one task to another should be captured as dependency between two tasks.,0
ARC to WARC conversions made by arc2warc shall be carried out according to a specification in a configuration file,"Libwarc and the bindings to its functionality shall enable the use of libwarc's iterators described in SRS 16-20 to be used within Java v1.5 and and later, using Java's new container iterators, such as ""for"" and ""foreach"".",0
An interface implementation shall be made for Java to allow the library to be used natively by Java programmers requiring no knowledge of the internal implementation of libwarc or C.,To add tasks as subtasks a method which indent the selected task nodes in GUI and change them to be subtasks is used. A manager of task hierarchy provides functions to update the relationship between tasks.,0
Change Task Begin/End Times manually with user changes; Change the start or end date either by editing its properties or by dragging-and-dropping the bar in the GUI.,Libwarc shall be implemented in C and shall conform to ANSI-C standard C99 revision.,0
"WARC extensions help content will be provided each of the commands ""curl"", ""wget"", and ""httrack""",WARC browser shall not support CDX files because the CDX file format is not a standard at this time and is outside of scope.,0
"Show Resource Utilization (underused or overused person);Tasks may be assigned to persons and it should be indicated if a person receives more tasks than he/she is able to handle (e.g., the person hours per  task for all tasks exceeds the allowed 8 hours a day) or if the person is not available due to holidays or vacation days. it should also be indicated if the person is under-utilized in that he/she is working less than the 8 hours a day.","Libwarc shall provide a generic iterator, to enable the developer to iterate over all WARCrecords and create an abstract WARC-document as a simple container",0
"WARC files shall be validated using a command line tool, ""w-validator"", which will enable validation or rejection of WARC files.",Using GUI user should be able to change the length of a task by dragging-and-dropping the bar on the GUI.,0
Libwarc shall provide a records iterator to handle WARC-type records,"The code and documentation of libwarc shall be licensed to the community using an IIPC approved license, such as Apache 2.0 or BSD licence",0
"Add/Remove Task links; Tasks can be linked with one another to indicate the sequence in which they have to be performed. For example, if there is a link from task 1 to task 2 then task 2 can only be started after task 1 is completed. The start date of task 2 must thus be after the end date of task 1.","Libwarc shall compile and run under Solaris, AIX, MingW or other Unix compliant system and may compile and run under Windows XP.",0
Delete Resources (person); Delete a person and all its associated information such as dependencies to all tasks the person is supposed to work on.,"Libwarc shall provide an API describing (1) the set of data, and (2) the set of operations that can be performed on the data. The data types shall be abstract (abstract data types - ADT), to ensure independence of concrete implementations.",0
The WARC Tools shall be implemented as a C library,GUI needs to provide ability to show is a person is  underutilized and overbooked.,0
WARC Browser shall support a rewriting interface,"Libwarc shall provide interfaces to SWIG wrappers to allow dynamic language bindings (Python, Ruby, Perl, Lua ...)",0
Create a new task which typically has a  start date and an end date. Tasks are activities that one or more persons resources are expected to complete in the specified time frame.,GUI should able to provide ability to change start/end date of a task.,0
WARC v0.17 shall be the baseline version of the WARC standard used in this project.,"Libwarc shall not use file to memory mapping technology, instead libwarc will explicitly allocate memory as needed.",0
"WARC extensions help content will be provided each of the commands ""curl"", ""wget"", and ""httrack""","There shall be a single entry point to libwarc, called ""warc.h"".",0
Create Resources (person);GanttProject supports Persons as resources. Persons have names and holidays or vacation days. Persons can be assigned to work on tasks.,Libwarc shall use dynamic heap memory for its internal usage.,0
"WARC extensions shall be released as a patch to each of the commands ""curl"", ""wget"", and ""httrack"" projects",The class of task uses an object of the assignments collection class to manage its assignments.,0
"It shall be possible to identify WARC files using the unix ""file"" command",GUI should able to provide ability to change task name. ,0
Create Resources (person);GanttProject supports Persons as resources. Persons have names and holidays or vacation days. Persons can be assigned to work on tasks.,"It shall be possible to perform read operations (read from offset, filters, etc.) on WARCrecords from a remote location via http.",0
Change Task Begin/End Times automatically with dependency changes;The start or end date should be changed automatically if links among tasks are changed,A collection of resource assignments is used to manage the relationships between multiple human resources and a task. It contains multiple objects of the human resource assignment class. The collection provides functions to add and remove human resource assignments.,0
"It shall be possible to identify WARC files using the unix ""file"" command",SRS 15 -Libwarc shall include ADT objects to handle read operations on ARC-records,0
A Java interface shall be implemented,SRS 38 -A web proxy interface shall be implemented that allows the user to set their web browser proxy to the one provided by the interface and thereby ensure all content is delivered from the archive and not from the live web.,0
Communication and support shall be provided to the open source community. This support must be provided for at least term of the project.,A GUI class of human resource load distribution uses objects of a load distribution class to capture the hours each person is supposed to work.,0
"WARC extensions help content will be provided each of the commands ""curl"", ""wget"", and ""httrack""",To create a new task an object of TaskManager class is passed to the class constructor. The TaskManager in its turn takes care of a resource allocation using ResourceAssignmentCollection class. ,0
An interface implementation shall be made for Java to allow the library to be used natively by Java programmers requiring no knowledge of the internal implementation of libwarc or C.,"Utility and application level functionality of WARC Tools shall be made available to end users as command line tools, extensions to existing tools, and simple web applications for accessing WARC content",0
Libwarc shall be memory safe and manage dynamic memory internally,"Libwarc shall be shipped with installation guides for Fedora, Debian, FreeBSD, Mac OS X 10.5 and Windows XP.",0
"It shall be possible to identify and validate WARC files using ""Jhove""",A Java interface to libwarc shall be implemented using the SWIG wrapper and/or JNI,0
It shall be possible to collect HTTrack data from the directories output by HTTrack and write the data to WARC files,The default compression format shall be Gzip,0
"It shall be possible to convert ARC files to WARC files using a command-line tool called ""arc2warc""",GUI needs to provide ability to assign persons to tasks.,0
Libwarc shall provide a default iterator as a built-in function,When deleting a task the GanttProject class calls GanttTreeTableNode and DefaultMutableTreeNode classes to identify the parent of the task being deleted.,0
"Show Resource Utilization (underused or overused person);Tasks may be assigned to persons and it should be indicated if a person receives more tasks than he/she is able to handle (e.g., the person hours per  task for all tasks exceeds the allowed 8 hours a day) or if the person is not available due to holidays or vacation days. it should also be indicated if the person is under-utilized in that he/she is working less than the 8 hours a day.",Libwarc shall support non-compressed WARC-records and compressed WARC-records and files,0
"Add/Remove Task links; Tasks can be linked with one another to indicate the sequence in which they have to be performed. For example, if there is a link from task 1 to task 2 then task 2 can only be started after task 1 is completed. The start date of task 2 must thus be after the end date of task 1.","When a resource is removed, all the tasks where the resource is assigned need to be updated. ",0
"Maintain Resource Properties;A resource has a range of properties, including name and holidays","Each peer class shall expose a set a class functions to read, write, and update attributes for the corresponding WARC-record.",0
Libwarc shall use gzip as the default compression format,"A command line tool ""arc2warc"" incorporating libwarc shall be able to migrate data in ARC-records to WARC-record format.",0
"It shall be possible to convert ARC files to WARC files using a command-line tool called ""arc2warc""",A human resource assignment class is used to represent the relationship between one task and one human resource. The class provides functions to get the task and the human resource. ,0
"Maintain task properties;  Edit and update task properties including start and end date, name, or progress(% complete).",WARC Browser shall support a client-side rewriting interface by using javascript code to rewrite links being delivered alongside archived content. This is based on the principles implemented in the Wayback Machine.,0
Libwarc shall be memory safe and manage dynamic memory internally,"The universal header ""warc.h"" shall ensure compatibility between all versions of libwarc.",0
Libwarc shall use gzip as the default compression format,The fact of linking of one task to another should be captured as dependency between two tasks.,0
WARC Browser shall provide an API that allows browsing of WARC files and associated CDX files via an HTTP server,It shall not be possible to use more than one compression schema (including noncompression) within a single WARC file. (i.e. it is not possible to mix compression schemes within a single WARC file).,0
WARC v0.17 shall be the baseline version of the WARC standard used in this project.,GUI should able to provide ability to set progress on a task.,0
Libwarc shall use gzip as the default compression format,"A set of command line tools incorporating libwarc shall perform migration of ""wget"" archives to WARC-records.",0
"WARC extensions help content will be provided each of the commands ""curl"", ""wget"", and ""httrack""",A GUI class of task property provides interface and functions to add and remove human resource assignments.,0
Create Resources (person);GanttProject supports Persons as resources. Persons have names and holidays or vacation days. Persons can be assigned to work on tasks.,A Python interface to libwarc shall be implemented using the SWIG wrapper,0
A Python interface shall be implemented,"Utility and application level functionality of WARC Tools shall be made available to end users as command line tools, extensions to existing tools, and simple web applications for accessing WARC content",0
"Libwarc shall provide an abstract interface for iterators, to enable custom iterators",SRS 38 -A web proxy interface shall be implemented that allows the user to set their web browser proxy to the one provided by the interface and thereby ensure all content is delivered from the archive and not from the live web.,0
"It shall be possible to identify WARC files using the unix ""file"" command","Libwarc and associated tools shall be shipped with installers to ""mod_warc"" for Apache (v2.X) and Lighttpd (v1.4.X) servers",0
Libwarc shall provide ARC-record reader functionality Libwarc reader will thereby make read operations as simple as possible.,"Only essential external libraries shall be used in libwarc, such as Gzip compression and wide characters encoding libraries.",0
Libwarc shall use gzip as the default compression format,The system should be able to evaluate critical path in a project.,0
Libwarc shall provide a range of functions through a universal interface for reading a range of valid WARC-records,A class is used to represent the constraint that the start date of the dependee task should not be earlier than the end date of the dependent task.,0
Iterators can use exact pattern search or regex expressions,Milestone is a task with no duration. It has only time point of occurrence.,0
Create Resources (person);GanttProject supports Persons as resources. Persons have names and holidays or vacation days. Persons can be assigned to work on tasks.,Milestone is a task with no duration. It has only time point of occurrence.,0
A Python interface shall be implemented,"The default operation of ""arc2warc"" shall carry out a one-to-one mapping of record fields, by converting each ARC-record to a corresponding ""response"" WARC-record and ""metadata"" WARCrecord, which shall include information about the conversion process.",0
A Python interface shall be implemented,"Libwarc shall compile and run under Solaris, AIX, MingW or other Unix compliant system and may compile and run under Windows XP.",0
Delete Tasks; Delete an existing task and all its associated information such as links to other tasks or knowledge on what resources are supposed to work on them.,"To ensure code portability on older computer architectures, Libwarc shall be compatible with any compiler conforming to the ANSI-C standard C89 revision.",0
"The deliverables shall be ported to the following platforms: Linux, FreeBSD, Mac OS X 10.5 and Windows.",The class of dependency collection provides a function to check if the new dependency will cause a loop each time a object of dependency class is created. The function returns an exception if there is a loop. ,0
Change Task Begin/End Times manually with user changes; Change the start or end date either by editing its properties or by dragging-and-dropping the bar in the GUI.,Each WARC-record shall be accessible via a peer C class of the same name.,0
Create a new task which typically has a  start date and an end date. Tasks are activities that one or more persons resources are expected to complete in the specified time frame.,"Helper documentation for libwarc functionality shall be made available within the ""HTTrack"", ""wget"" and ""curl"" commands.",0
"The libwarc interfaces shall fully encapsulate and internal functionality, isolating by abstraction any tool or application based on libwarc from changes in the internal implementation.",The Task class provides a public method SetDuration() which allows to specify the duration of the task. As input argument the method takes an object of TaskLength class,0
Create a new task which typically has a  start date and an end date. Tasks are activities that one or more persons resources are expected to complete in the specified time frame.,"Libwarc shall support multiple compression schemas, loading a specific compressor at runtime as an external shared library.",0
"The C library will be developed in such a way as to allow it to be used with the Simplified Wrapper and Interface Generator, or SWIG, (www.swig.org) in order to wrap the C code and allow it to be called natively in a wide variety of languages.",An object of the recalculating task schedule algorithm class is used to change the start or end date based on dependency changes. The algorithm class provides functions to fulfill the constraints and to modify the start or end date of the tasks.,0
The functionality of the library shall be exposed in such a way as to fit the metaphors and paradigms of the implementation language,Communication and support shall be provided to the open source community. This support must be provided for at least term of the project.,0
"The libwarc interfaces shall fully encapsulate and internal functionality, isolating by abstraction any tool or application based on libwarc from changes in the internal implementation.","Libwarc shall be shipped with a number of ready-to-use command lines, for example, warcdump (to dump the contents of a WARC file), w-filter, etc.",0
Libwarc shall use disk-based working memory,Using GUI user should be able to change the length of a task by dragging-and-dropping the bar on the GUI.,0
Libwarc shall use disk-based working memory,"When a resource is removed, all the tasks where the resource is assigned need to be updated. ",0
The functionality of the library shall be exposed in such a way as to fit the metaphors and paradigms of the implementation language,A GUI class of human resource load distribution uses objects of a load distribution class to capture the hours each person is supposed to work.,0
A Python script shall be made available to enable rapid development of WARC based solutions,"The payload (or the WARC-record document itself) are stored on disk, to avoid using memory heap, even for small objects.",0
Iterators can use exact pattern search or regex expressions,"The universal header ""warc.h"" shall ensure that deprecated function calls and changes to the library are notified at compile time.",0
The final WARC API shall be coded in C with minimum dependencies or external libraries (e.g. GZIP). It must not include any assembly code.,Using GUI user should be able to change the length of a task via date picker control.,0
Add/Remove Resources to Tasks Dependencies;Dependencies between tasks and resources indicate the resources who are supposed to complete a task. Each task could be worked on by multiple persons and each person could work on multiple tasks. Dependencies may also be annotated to capture how many hours each person is supposed to work on a task on a daily basis.,The task manager class uses an object of dependency collection class to manage dependencies.,0
WARC files in various test-states shall be provided that test the Jhove deliverables,"Libwarc shall be shipped with installation guides for Fedora, Debian, FreeBSD, Mac OS X 10.5 and Windows XP.",0
"Libwarc shall enable combinations of iterators to be used, i.e. composite iterators","It shall be possible to perform read operations (read from offset, filters, etc.) on WARCrecords from a remote location via http.",0
"It shall be possible to collect arbitrary web content, such as html files, images etc. (for example from a web server document root directory), and write the data to WARC files","Libwarc and associated tools shall be shipped with installers to ""mod_warc"" for Apache (v2.X) and Lighttpd (v1.4.X) servers",0
Change Task Begin/End Times manually with user changes; Change the start or end date either by editing its properties or by dragging-and-dropping the bar in the GUI.,Application needs to keep track of task's begin and end times.,0
"Maintain Resource Properties;A resource has a range of properties, including name and holidays",A GUI class of task property provides interface and functions to add and remove dependencies by using an object of the dependency collection.,0
"It shall be possible to convert ARC files to WARC files using a command-line tool called ""arc2warc""",The human resource class contains the variable holidays. The class provides functions to change and to get holidays. There can be multiple holidays. ,0
"The core functionality of WARC Tools, specifically the WARC writer/reader, shall be implemented as a comprehensive, standalone, general purpose software library - libwarc.",A Python interface to libwarc shall be implemented using the SWIG wrapper,0
"Utility and application level functionality of WARC Tools shall be made available to end users as command line tools, extensions to existing tools, and simple web applications for accessing WARC content.","Only essential external libraries shall be used in libwarc, such as Gzip compression and wide characters encoding libraries.",0
WARC Browser shall support a rewriting interface,"When a resource is removed, all the tasks where the resource is assigned need to be updated. ",0
An interface implementation shall be made for Java to allow the library to be used natively by Java programmers requiring no knowledge of the internal implementation of libwarc or C.,A GUI class of task property provides interface and functions to add and remove dependencies by using an object of the dependency collection.,0
Libwarc shall provide a range of functions through a universal interface for reading a range of valid WARC-records,"Major revisions to the WARC ISO standard may lead to revisions of libwarc, but these revisions should be isolated and not affect any tools developed incorporating libwarc",0
WARC Browser shall provide an API that allows browsing of WARC files and associated CDX files via an HTTP server,"Libwarc shall support multiple compression schemas, loading a specific compressor at runtime as an external shared library.",0
"Libwarc shall provide a range of functions through a universal interface for creating each type of valid WARC-record, thus ensuring the resulting WARC files conform to the prevailing WARC standard",A class is used to represent the dependency between one task and one human resource. The dependency class provides functions to get the task and the human resource. ,0
"It shall be possible to collect arbitrary web content, such as html files, images etc. (for example from a web server document root directory), and write the data to WARC files","Every time Start/End time for a task changes, the start/end time of one or more its subtasks need to change as well.",0
An Apache and Lighttp plug-in shall provide access to the libwarc API and WARC Browser over http,It shall not be possible to use more than one compression schema (including noncompression) within a single WARC file. (i.e. it is not possible to mix compression schemes within a single WARC file).,0
Create a new task which typically has a  start date and an end date. Tasks are activities that one or more persons resources are expected to complete in the specified time frame.,User should be able to create milestones.,0
"Libwarc shall enable combinations of iterators to be used, i.e. composite iterators",When deleting a task the GanttProject class calls GanttTreeTableNode and DefaultMutableTreeNode classes to identify the parent of the task being deleted.,0
"WARC extensions shall be released as a patch to each of the commands ""curl"", ""wget"", and ""httrack"" projects",The task manager class uses an object of dependency collection class to manage dependencies.,0
Add/Remove Holidays and Vacation Days;Holidays and vacation days are properties of persons (resources). changing this information also changes the availability of a person on certain days.,"It shall be possible to perform read operations (read from offset, filters, etc.) on WARCrecords from a remote location via http.",0
Libwarc shall provide a range of functions through a universal interface for reading a range of valid WARC-records,"The universal header ""warc.h"" shall ensure compatibility between all versions of libwarc.",0
Patches implemented for third party projects shall be contributed and distributed to the appropriate community.,A GUI class of graphic area provides a function to draw dependency. The function uses an object of the task manager to add dependencies.1,0
An interface implementation shall be made for Java to allow the library to be used natively by Java programmers requiring no knowledge of the internal implementation of libwarc or C.,The manager of task hierarchy provides a method to move a task node to a specific position.,0
"Utility and application level functionality of WARC Tools shall be made available to end users as command line tools, extensions to existing tools, and simple web applications for accessing WARC content.",GUI needs to provide ability to assign persons to tasks.,0
Communication and support shall be provided to the open source community. This support must be provided for at least term of the project.,"It shall be possible to perform read operations (read from offset, filters, etc.) on WARCrecords from a remote location via http.",0
Add/Remove Holidays and Vacation Days;Holidays and vacation days are properties of persons (resources). changing this information also changes the availability of a person on certain days.,"A magic number for WARC shall be created and incorporated in the ""file"" mime-type database, enabling the simple identification of WARC files via the Unix ""file"" command",0
WARC files in various test-states shall be provided that test the Jhove deliverables,GUI needs to provide ability to change length of a task.,0
WARC Browser shall support a proxy-style interface,The default compression format shall be Gzip,0
"Libwarc shall provide a range of functions through a universal interface for creating each type of valid WARC-record, thus ensuring the resulting WARC files conform to the prevailing WARC standard",An independent Java implementation of libwarc may be implemented subject to review of deliverables satisfying SRS 61,0
Iterators can use exact pattern search or regex expressions,It shall not be possible to use more than one compression schema (including noncompression) within a single WARC file. (i.e. it is not possible to mix compression schemes within a single WARC file).,0
The code and documentation shall be licensed using an open source license.,"""arc2warc"" shall have make a default operation in cases where an ARC-record has no corresponding field in the WARC-record.",0
Libwarc shall use disk-based working memory,The Task class provides a public method SetEnd() which allows to specify starting date for the task. As input argument the method takes an object of GanttCalendar class.,0
Change Task Begin/End Times automatically with dependency changes;The start or end date should be changed automatically if links among tasks are changed,"To delete a task from the Calendar the GanttProject class call delete method and supplied TaskId paramenter. The adjustment of allocated resources and links to other tasks takes place through interfacing with the following classes DefaultMutableTreeNode, GanttTreeTableNode, TaskNode, and AdjustTaskBoundsAlgorithm.",0
The final WARC API shall be coded in C with minimum dependencies or external libraries (e.g. GZIP). It must not include any assembly code.,To remove tasks as subtasks GanttTree2 class calls a method which dedent selected task nodes in GUI so that they will not be subtasks of their original parents tasks. An object of a class is used to remove relationship between selected tasks and their original parents and add relationship between selected tasks and their new parents.,0
ARC to WARC conversions made by arc2warc shall be carried out according to a specification in a configuration file,"The universal header ""warc.h"" shall ensure that deprecated function calls and changes to the library are notified at compile time.",0
Dynamic memory management shall be hidden inside libwarc,"Major revisions to the WARC ISO standard may lead to revisions of libwarc, but these revisions should be isolated and not affect any tools developed incorporating libwarc",0
Any software tool or application based on libwarc shall require just a single header file.,WARC browser shall not support CDX files because the CDX file format is not a standard at this time and is outside of scope.,0
A Python interface shall be implemented,The Task class provides a public method SetStart() which allows to specify starting date for the task. As input argument the method takes an object of GanttCalendar class. ,0
The code and documentation shall be licensed using an open source license.,"Every time Start/End time for a task changes, the start/end time of one or more its subtasks need to change as well.",0
"Add/Remove Task links; Tasks can be linked with one another to indicate the sequence in which they have to be performed. For example, if there is a link from task 1 to task 2 then task 2 can only be started after task 1 is completed. The start date of task 2 must thus be after the end date of task 1.","Libwarc shall be made available as a binary for at least GNU/Linux, FreeBSD, Mac OS X and Windows XP.",0
"WARC files shall be validated using a command line tool, ""w-validator"", which will enable validation or rejection of WARC files.","Developers using libwarc shall not be required to allocate/release memory directly, instead the developer shall use libwarc's object constructor and destructor functions.",0
"The deliverables shall be made available in source code, named as ""libwarc-version.tar.gz"", where version is the version of the library. A number of binary distributions may be made, including RPM, DEB and EXE.",A GUI class of task property provides interface and functions to add and remove human resource assignments.,0
WARC files in various test-states shall be provided that test the Jhove deliverables,Each WARC-record shall be accessible via a peer C class of the same name.,0
Add/Remove Holidays and Vacation Days;Holidays and vacation days are properties of persons (resources). changing this information also changes the availability of a person on certain days.,"The attributes of each WARC-record, as per the ISO standard specification, shall have a corresponding attribute in its peer C class.",0
"It shall be possible to convert ARC files to WARC files using a command-line tool called ""arc2warc""",The class for holidays provides functions to get the start date and the finish date. The class also provides function to check if a special date is in holiday.,0
An Apache and Lighttp plug-in shall provide access to the libwarc API and WARC Browser over http,"The code and documentation of libwarc shall be licensed to the community using an IIPC approved license, such as Apache 2.0 or BSD licence",0
"The C library shall be implemented to be compatible with the Simplified Wrapper and Interface Generator (SWIG, http://www.swig.org) - a wrapper for libwarc C code to allow it to be called natively in a wide variety of languages.",An object of the recalculating task schedule algorithm class is used to change the start or end date based on dependency changes. The algorithm class provides functions to fulfill the constraints and to modify the start or end date of the tasks.,0
Any software tool or application based on libwarc shall require just a single header file.,"Every time Start/End time for a task changes, the start/end time of one or more its subtasks need to change as well.",0
An interface implementation may be made for Python to allow the library to be used natively by Python programmers requiring no knowledge of the internal implementation of libwarc or C.,WARC Browser shall support a client-side rewriting interface by using javascript code to rewrite links being delivered alongside archived content. This is based on the principles implemented in the Wayback Machine.,0
Libwarc shall be memory safe and manage dynamic memory internally,"Each peer class shall expose a set a class functions to read, write, and update attributes for the corresponding WARC-record.",0
The functionality of the library shall be exposed in such a way as to fit the metaphors and paradigms of the implementation language,A Python interface to libwarc shall be implemented using the SWIG wrapper,0
An interface implementation may be made for Python to allow the library to be used natively by Python programmers requiring no knowledge of the internal implementation of libwarc or C.,"The universal header ""warc.h"" shall ensure that deprecated function calls and changes to the library are notified at compile time.",0
"Utility and application level functionality of WARC Tools shall be made available to end users as command line tools, extensions to existing tools, and simple web applications for accessing WARC content.","The universal header ""warc.h"" shall ensure that deprecated function calls and changes to the library are notified at compile time.",0
"Web server plug-ins shall conform to the Apache 'mod' API and shall operate correctly with both Apache and Lighttp servers and shall be compatible with appropriate web sever programming standards, such as WSGI in Python and the Servlet API in Java.","There shall be a single entry point to libwarc, called ""warc.h"".",0
The functionality of the library shall be exposed in such a way as to fit the metaphors and paradigms of the implementation language,"There is a class to represent holiday. The holiday class provides functions to set the begin date and the end date of the holiday, to check if a date is in the holiday, and to get the duration of the holiday.",0
"WARC files shall be validated using a command line tool, ""w-validator"", which will enable validation or rejection of WARC files.","A set of command line tools incorporating libwarc shall perform migration of ""wget"" archives to WARC-records.",0
Change Task Begin/End Times manually with user changes; Change the start or end date either by editing its properties or by dragging-and-dropping the bar in the GUI.,"The code and documentation of libwarc shall be licensed to the community using an IIPC approved license, such as Apache 2.0 or BSD licence",0
Iterators can use exact pattern search or regex expressions,"Libwarc shall be made available as a binary for at least GNU/Linux, FreeBSD, Mac OS X and Windows XP.",0
"It shall be possible to identify and validate WARC files using ""Jhove""",To remove tasks as subtasks a method which dedent selected task nodes in GUI so that they will not be subtasks of their original parents tasks is used. The task tree model provides methods to remove relationship between selected tasks and their original parents and add relationship between selected tasks and their new parents.,0
Libwarc shall provide a range of functions through a universal interface for reading a range of valid WARC-records,User interface should be able to provide an ability to specify whether a specific task in a milestone.,0
Any software tool or application based on libwarc shall require just a single header file.,"The default operation of ""arc2warc"" shall carry out a one-to-one mapping of record fields, by converting each ARC-record to a corresponding ""response"" WARC-record and ""metadata"" WARCrecord, which shall include information about the conversion process.",0
Prevent Circular Dependencies;Links among tasks may not be circular in that task 1 cannot depend on task 2 if task 2 already depends on task 1.,"Libwarc source code shall be released in the following archives: ""libwarc-version.tar.gz"", ""libwarc-version.tar.bz2"", ""libwarc-version.zip"" together with their corresponding digests. Developers may then adapt the build configuration files for best performance on their target machines.",0
"Add/Remove Tasks as Subtasks;A task can be made a subtask of another. For example, task 1.1 is a subtask of task 1.",Milestone should be displayed visually differently from regular tasks.,0
It shall be possible to walk a curl directory and write the data to WARC files,Libwarc shall be shipped with a developer guide and useful examples.,0
Add/Remove Holidays and Vacation Days;Holidays and vacation days are properties of persons (resources). changing this information also changes the availability of a person on certain days.,GUI needs to provide ability to delete resources from a project.,0
Add/Remove Resources to Tasks Dependencies;Dependencies between tasks and resources indicate the resources who are supposed to complete a task. Each task could be worked on by multiple persons and each person could work on multiple tasks. Dependencies may also be annotated to capture how many hours each person is supposed to work on a task on a daily basis.,Libwarc shall be shipped with a developer guide and useful examples.,0
"The deliverables shall be ported to the following platforms: Linux, FreeBSD, Mac OS X 10.5 and Windows.","Libwarc shall provide an API describing (1) the set of data, and (2) the set of operations that can be performed on the data. The data types shall be abstract (abstract data types - ADT), to ensure independence of concrete implementations.",0
Dynamic memory management shall be hidden inside libwarc,The class of task uses an object of the assignments collection class to manage its assignments.,0
"Libwarc shall provide an abstract interface for iterators, to enable custom iterators","Libwarc and associated tools shall be shipped with installers to ""mod_warc"" for Apache (v2.X) and Lighttpd (v1.4.X) servers",0
"Libwarc shall provide a range of functions through a universal interface for creating each type of valid WARC-record, thus ensuring the resulting WARC files conform to the prevailing WARC standard",Any operations on WARC-records shall be possible using functions accepting the abstract handle as an argument.,0
Prevent Circular Dependencies;Links among tasks may not be circular in that task 1 cannot depend on task 2 if task 2 already depends on task 1.,Application needs to keep track of task's begin and end times.,0
WARC Browser shall support a proxy-style interface,GUI should able to provide ability to change task name. ,0
"Libwarc shall provide a range of functions through a universal interface for creating each type of valid WARC-record, thus ensuring the resulting WARC files conform to the prevailing WARC standard",GUI needs to provide ability to show is a person is  underutilized and overbooked.,0
"Add/Remove Task links; Tasks can be linked with one another to indicate the sequence in which they have to be performed. For example, if there is a link from task 1 to task 2 then task 2 can only be started after task 1 is completed. The start date of task 2 must thus be after the end date of task 1.",A Python interface to libwarc shall be implemented using the SWIG wrapper,0
Libwarc shall use gzip as the default compression format,"Libwarc and associated tools shall be shipped with installers to ""mod_warc"" for Apache (v2.X) and Lighttpd (v1.4.X) servers",0
"The C library will be developed in such a way as to allow it to be used with the Simplified Wrapper and Interface Generator, or SWIG, (www.swig.org) in order to wrap the C code and allow it to be called natively in a wide variety of languages.",The class for holidays provides functions to get the start date and the finish date. The class also provides function to check if a special date is in holiday.,0
It shall be possible to walk a curl directory and write the data to WARC files,Libwarc's iterators may be combined into composite iterators to enable the developer to more than one search field,0
"The library and each tool or extension shall be documented for developers and end users, using man pages and other common document forms.","It shall be possible to create a WARC-record using a constructor, which will returns an abstract handle to data representing the WARC-record.",0
A Jhove plugin module and an output handler shall be made available for WARC files,An assignment of a resource to a task is captured as a relationship.,0
"Add/Remove Tasks as Subtasks;A task can be made a subtask of another. For example, task 1.1 is a subtask of task 1.","The universal header ""warc.h"" shall provide normalised interfaces to enable developers to create valid and compliant WARC-records, based on the definition in the ""ISO TC 46/SC 4 N 595"" standards document. The interfaces shall be made available to create WARC records of the following types:- ""warinfo""- ""response""- ""request""- ""metadata""- ""revisit""- ""conversion""- ""continuation""- ""resource""",0
Patches implemented for third party projects shall be contributed and distributed to the appropriate community.,"Only essential external libraries shall be used in libwarc, such as Gzip compression and wide characters encoding libraries.",0
"Installation scripts and/or instructions shall be made for the library and tools for each target platform, including Linux, Unix and Windows, as well as apache and lighttp installation scripts","It shall be possible to create a WARC-record using a constructor, which will returns an abstract handle to data representing the WARC-record.",0
The functionality of the library shall be exposed in such a way as to fit the metaphors and paradigms of the implementation language,A GUI provides interface and functions to edit the properties of objects of the human resource class.,0
"The deliverables shall be ported to the following platforms: Linux, FreeBSD, Mac OS X 10.5 and Windows.",WarcMdoule and WarcHandler plugin modules shall be implemented for Jhove Plugin layer to enable identification and validation of WARC files.,0
"Add/Remove Task links; Tasks can be linked with one another to indicate the sequence in which they have to be performed. For example, if there is a link from task 1 to task 2 then task 2 can only be started after task 1 is completed. The start date of task 2 must thus be after the end date of task 1.","Every time Start/End time for a task changes, the start/end time of one or more its subtasks need to change as well.",0
Libwarc shall provide a MIMES iterator to handle MIME-types payloads,The human resource class provides a function to change the availability of the person based on holidays. ,0
"Maintain Resource Properties;A resource has a range of properties, including name and holidays","Developers using libwarc shall not be required to allocate/release memory directly, instead the developer shall use libwarc's object constructor and destructor functions.",0
Show Critical Path; The critical path indicates which tasks will cause project delays if they are delayed.,A GUI class of human resource load distribution uses objects of a load distribution class to capture the hours each person is supposed to work.,0
"It shall be possible to convert ARC files to WARC files using a command-line tool called ""arc2warc""",SRS 38 -A web proxy interface shall be implemented that allows the user to set their web browser proxy to the one provided by the interface and thereby ensure all content is delivered from the archive and not from the live web.,0
"It shall be possible to collect arbitrary web content, such as html files, images etc. (for example from a web server document root directory), and write the data to WARC files",Libwarc shall be incorporated within an Apache module to enable all actions specified in SRS 34-36 to be executed within Apache.,0
"Show Resource Utilization (underused or overused person);Tasks may be assigned to persons and it should be indicated if a person receives more tasks than he/she is able to handle (e.g., the person hours per  task for all tasks exceeds the allowed 8 hours a day) or if the person is not available due to holidays or vacation days. it should also be indicated if the person is under-utilized in that he/she is working less than the 8 hours a day.",Libwarc shall allocate minimum memory heap to store WARC-record metadata.,0
Libwarc shall provide a range of functions through a universal interface for reading a range of valid WARC-records,GUI needs to provide ability to display critical path and make the changes affecting critical path updated.,0
It shall be possible to walk a curl directory and write the data to WARC files,When deleting a task the GanttProject class calls AdjustTaskBoundsAlgorithm and passes the parent of the deleted task as a parameter. The AdjustTaskBoundsAlgorithm takes care of handling and releasing resources associated with the deleted task. ,0
Libwarc shall provide a records iterator to handle WARC-type records,The fact of linking of one task to another should be captured as dependency between two tasks.,0
"WARC Tools shall be highly portable, running on a range of Linux/Unix platforms and XP as a minimum, together with man pages, build and installation guides, developer guides, etc.",Libwarc shall use dynamic heap memory for its internal usage.,0
A Python interface shall be implemented,GUI should able to provide ability to set progress on a task.,0
Change Task Begin/End Times automatically with dependency changes;The start or end date should be changed automatically if links among tasks are changed,The class for holidays provides functions to get the start date and the finish date. The class also provides a function to check if a special date is in holiday.,0
An interface implementation may be made for Python to allow the library to be used natively by Python programmers requiring no knowledge of the internal implementation of libwarc or C.,WarcMdoule and WarcHandler plugin modules shall be implemented for Jhove Plugin layer to enable identification and validation of WARC files.,0
WARC files in various test-states shall be provided that test the Jhove deliverables,"Libwarc shall provide an API describing (1) the set of data, and (2) the set of operations that can be performed on the data. The data types shall be abstract (abstract data types - ADT), to ensure independence of concrete implementations.",0
The final WARC API shall be coded in C with minimum dependencies or external libraries (e.g. GZIP). It must not include any assembly code.,GUI needs to provide ability to show utilization of a person.,0
The code and documentation shall be licensed using an open source license.,"It shall be possible to specify non-default operations of ""arc2warc"" using a named configuration file, which will describe the desired ARC-record to WARC-record conversion.",0
It shall be possible to walk a wget mirror and write the data to WARC files,"Each peer class shall expose a set a class functions to read, write, and update attributes for the corresponding WARC-record.",0
"Libwarc shall provide an abstract interface for iterators, to enable custom iterators",To remove tasks as subtasks a method which dedent selected task nodes in GUI so that they will not be subtasks of their original parents tasks is used. The task tree model provides methods to remove relationship between selected tasks and their original parents and add relationship between selected tasks and their new parents.,0
Add/Remove Holidays and Vacation Days;Holidays and vacation days are properties of persons (resources). changing this information also changes the availability of a person on certain days.,SRS 15 -Libwarc shall include ADT objects to handle read operations on ARC-records,0
"Utility and application level functionality of WARC Tools shall be made available to end users as command line tools, extensions to existing tools, and simple web applications for accessing WARC content.","A collection of dependency class is used to manage dependencies. It contains objects of dependency classes and provides functions to create, delete, and get dependencies. ",0
Libwarc shall provide a range of functions through a universal interface for reading a range of valid WARC-records,"A collection of dependency class is used to manage dependencies. It contains objects of dependency classes and provides functions to create, delete, and get dependencies. ",0
"Maintain Resource Properties;A resource has a range of properties, including name and holidays",When deleting a task the GanttProject class calls GanttTreeTableNode and DefaultMutableTreeNode classes to identify the parent of the task being deleted.,0
Libwarc shall provide a MIMES iterator to handle MIME-types payloads,The class of task uses an object of the assignments collection class to manage its assignments.,0
WARC Browser shall support a proxy-style interface,A Python interface to libwarc shall be implemented using the SWIG wrapper,0
Libwarc shall use gzip as the default compression format,"Libwarc shall not use file to memory mapping technology, instead libwarc will explicitly allocate memory as needed.",0
A Python script shall be made available to enable rapid development of WARC based solutions,The class of task uses an object of the assignments collection class to manage its assignments.,0
"It shall be possible to identify and validate WARC files using ""Jhove""","Libwarc shall be shipped with installation guides for Fedora, Debian, FreeBSD, Mac OS X 10.5 and Windows XP.",0
An interface implementation shall be made for Java to allow the library to be used natively by Java programmers requiring no knowledge of the internal implementation of libwarc or C.,"Libwarc shall support multiple compression schemas, loading a specific compressor at runtime as an external shared library.",0
It shall be possible to walk a wget mirror and write the data to WARC files,Assembly code and specific system features shall not be used in libwarc to ensure resulting code is widely portable across multiple target architectures,0
Change Task Begin/End Times automatically with dependency changes;The start or end date should be changed automatically if links among tasks are changed,The system should be able to evaluate critical path in a project.,0
"The library and each tool or extension shall be documented for developers and end users, using man pages and other common document forms.",Milestone is a task with no duration. It has only time point of occurrence.,0
Library functionality shall have APIs and dynamic language bindings to be made available as software libraries for developers.,User interface should be able to provide an ability to specify whether a specific task in a milestone.,0
Libwarc shall provide a records iterator to handle WARC-type records,Using GUI user should be able to change the length of a task by dragging-and-dropping the bar on the GUI.,0
Dynamic memory management shall be hidden inside libwarc,"Libwarc shall be made available as a binary for at least GNU/Linux, FreeBSD, Mac OS X and Windows XP.",0
Libwarc shall provide a records iterator to handle WARC-type records,"When a resource is removed, all the tasks where the resource is assigned need to be updated. ",0
Libwarc shall provide a MIMES iterator to handle MIME-types payloads,Patches implemented for third party projects shall be contributed and distributed to the appropriate community,0
Create Resources (person);GanttProject supports Persons as resources. Persons have names and holidays or vacation days. Persons can be assigned to work on tasks.,"Python scripts shall be implemented incorporating libwarc, and making all of the functionality of libwarc and API available in Python.",0
"WARC extensions shall be released as a patch to each of the commands ""curl"", ""wget"", and ""httrack"" projects",The Task class provides a public method SetEnd() which allows to specify starting date for the task. As input argument the method takes an object of GanttCalendar class.,0
A Python interface shall be implemented,Libwarc's iterators may be combined into composite iterators to enable the developer to more than one search field,0
"It shall be possible to identify and validate WARC files using ""Jhove""",Libwarc shall encapsulate and handle all memory management when processing WARCrecords.,0
"Installation scripts and/or instructions shall be made for the library and tools for each target platform, including Linux, Unix and Windows, as well as apache and lighttp installation scripts",A GUI class of human resource load distribution uses objects of a load distribution class to capture the hours each person is supposed to work.,0
WARC files in various test-states shall be provided that test the Jhove deliverables,To remove tasks as subtasks a method which dedent selected task nodes in GUI so that they will not be subtasks of their original parents tasks is used. The task tree model provides methods to remove relationship between selected tasks and their original parents and add relationship between selected tasks and their new parents.,0
Add/Remove Holidays and Vacation Days;Holidays and vacation days are properties of persons (resources). changing this information also changes the availability of a person on certain days.,"It shall be possible to perform read operations (read from offset, filters, etc.) on WARCrecords from a remote location via http.",0
Add/Remove Resources to Tasks Dependencies;Dependencies between tasks and resources indicate the resources who are supposed to complete a task. Each task could be worked on by multiple persons and each person could work on multiple tasks. Dependencies may also be annotated to capture how many hours each person is supposed to work on a task on a daily basis.,When deleting a task the GanttProject class calls GanttTreeTableNode and DefaultMutableTreeNode classes to identify the parent of the task being deleted.,0
Libwarc shall provide a stable Application Programme Interface (API) to handle WARCrecords as abstract objects (ADT),A Java interface to libwarc shall be implemented using the SWIG wrapper and/or JNI,0
"It shall be possible to identify WARC files using the unix ""file"" command",Libwarc shall be implemented to WARC v0.17.,0
"The deliverables shall be ported to the following platforms: Linux, FreeBSD, Mac OS X 10.5 and Windows.",An object of the recalculating task schedule algorithm class is used to change the start or end date based on dependency changes. The algorithm class provides functions to fulfill the constraints and to modify the start or end date of the tasks.,0
